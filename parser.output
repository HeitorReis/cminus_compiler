Rules useless in parser due to conflicts

   29 selection_decl: IF LPAREN expression RPAREN statement ELSE statement


Grammar

    0 $accept: program $end

    1 program: declaration_list

    2 declaration_list: declaration_list declaration
    3                 | declaration

    4 declaration: var_declaration
    5            | fun_declaration

    6 var_declaration: type_specifier ID SEMICOLON
    7                | type_specifier ID LBRACK NUM RBRACK SEMICOLON

    8 type_specifier: INT
    9               | VOID

   10 fun_declaration: type_specifier ID LPAREN params RPAREN compound_decl

   11 params: param_list
   12       | VOID

   13 param_list: param_list COMMA param
   14           | param

   15 param: type_specifier ID
   16      | type_specifier ID LBRACK RBRACK

   17 compound_decl: LBRACE local_declarations statement_list RBRACE

   18 local_declarations: local_declarations var_declaration
   19                   | ε

   20 statement_list: statement_list statement
   21               | ε

   22 statement: expression_decl
   23          | compound_decl
   24          | selection_decl
   25          | iteration_decl
   26          | return_decl

   27 expression_decl: expression SEMICOLON

   28 selection_decl: IF LPAREN expression RPAREN statement
   29               | IF LPAREN expression RPAREN statement ELSE statement

   30 iteration_decl: WHILE LPAREN expression RPAREN statement

   31 return_decl: RETURN SEMICOLON
   32            | RETURN expression SEMICOLON

   33 expression: var ASSIGN expression
   34           | simple_expression

   35 var: ID
   36    | ID LBRACK expression RBRACK

   37 simple_expression: sum_expression relational sum_expression
   38                  | sum_expression

   39 relational: LT
   40           | LTE
   41           | GT
   42           | GTE
   43           | EQ
   44           | NEQ

   45 sum_expression: sum_expression sum term
   46               | term

   47 sum: PLUS
   48    | MINUS

   49 term: term mult factor
   50     | factor

   51 mult: TIMES
   52     | DIV

   53 factor: LPAREN expression RPAREN
   54       | var
   55       | call
   56       | NUM

   57 call: ID LPAREN args RPAREN

   58 args: arg_list
   59     | ε

   60 arg_list: arg_list COMMA expression
   61         | expression
   62         | param


Terminals, with rules where they appear

    $end (0) 0
    IF (1) 28 29
    WHILE (2) 30
    RETURN (3) 31 32
    INT (4) 8
    VOID (5) 9 12
    NUM (6) 7 56
    ID (7) 6 7 10 15 16 35 36 57
    EQ (8) 43
    NEQ (9) 44
    LT (10) 39
    LTE (11) 40
    GT (12) 41
    GTE (13) 42
    PLUS (14) 47
    MINUS (15) 48
    TIMES (16) 51
    DIV (17) 52
    ASSIGN (18) 33
    SEMICOLON (19) 6 7 27 31 32
    COMMA (20) 13 60
    LPAREN (21) 10 28 29 30 53 57
    RPAREN (22) 10 28 29 30 53 57
    LBRACE (23) 17
    RBRACE (24) 17
    LBRACK (25) 7 16 36
    RBRACK (26) 7 16 36
    ELSE (27) 29
    error (256)
    LOWER_THAN_ELSE (258)


Nonterminals, with rules where they appear

    $accept (31)
        on left: 0
    program (32)
        on left: 1
        on right: 0
    declaration_list (33)
        on left: 2 3
        on right: 1 2
    declaration (34)
        on left: 4 5
        on right: 2 3
    var_declaration (35)
        on left: 6 7
        on right: 4 18
    type_specifier (36)
        on left: 8 9
        on right: 6 7 10 15 16
    fun_declaration (37)
        on left: 10
        on right: 5
    params (38)
        on left: 11 12
        on right: 10
    param_list (39)
        on left: 13 14
        on right: 11 13
    param (40)
        on left: 15 16
        on right: 13 14 62
    compound_decl (41)
        on left: 17
        on right: 10 23
    local_declarations (42)
        on left: 18 19
        on right: 17 18
    statement_list (43)
        on left: 20 21
        on right: 17 20
    statement (44)
        on left: 22 23 24 25 26
        on right: 20 28 29 30
    expression_decl (45)
        on left: 27
        on right: 22
    selection_decl (46)
        on left: 28 29
        on right: 24
    iteration_decl (47)
        on left: 30
        on right: 25
    return_decl (48)
        on left: 31 32
        on right: 26
    expression (49)
        on left: 33 34
        on right: 27 28 29 30 32 33 36 53 60 61
    var (50)
        on left: 35 36
        on right: 33 54
    simple_expression (51)
        on left: 37 38
        on right: 34
    relational (52)
        on left: 39 40 41 42 43 44
        on right: 37
    sum_expression (53)
        on left: 45 46
        on right: 37 38 45
    sum (54)
        on left: 47 48
        on right: 45
    term (55)
        on left: 49 50
        on right: 45 46 49
    mult (56)
        on left: 51 52
        on right: 49
    factor (57)
        on left: 53 54 55 56
        on right: 49 50
    call (58)
        on left: 57
        on right: 55
    args (59)
        on left: 58 59
        on right: 57
    arg_list (60)
        on left: 60 61 62
        on right: 58 60


State 0

    0 $accept: • program $end

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    program           go to state 3
    declaration_list  go to state 4
    declaration       go to state 5
    var_declaration   go to state 6
    type_specifier    go to state 7
    fun_declaration   go to state 8


State 1

    8 type_specifier: INT •

    $default  reduce using rule 8 (type_specifier)


State 2

    9 type_specifier: VOID •

    $default  reduce using rule 9 (type_specifier)


State 3

    0 $accept: program • $end

    $end  shift, and go to state 9


State 4

    1 program: declaration_list •
    2 declaration_list: declaration_list • declaration

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    $default  reduce using rule 1 (program)

    declaration      go to state 10
    var_declaration  go to state 6
    type_specifier   go to state 7
    fun_declaration  go to state 8


State 5

    3 declaration_list: declaration •

    $default  reduce using rule 3 (declaration_list)


State 6

    4 declaration: var_declaration •

    $default  reduce using rule 4 (declaration)


State 7

    6 var_declaration: type_specifier • ID SEMICOLON
    7                | type_specifier • ID LBRACK NUM RBRACK SEMICOLON
   10 fun_declaration: type_specifier • ID LPAREN params RPAREN compound_decl

    ID  shift, and go to state 11


State 8

    5 declaration: fun_declaration •

    $default  reduce using rule 5 (declaration)


State 9

    0 $accept: program $end •

    $default  accept


State 10

    2 declaration_list: declaration_list declaration •

    $default  reduce using rule 2 (declaration_list)


State 11

    6 var_declaration: type_specifier ID • SEMICOLON
    7                | type_specifier ID • LBRACK NUM RBRACK SEMICOLON
   10 fun_declaration: type_specifier ID • LPAREN params RPAREN compound_decl

    SEMICOLON  shift, and go to state 12
    LPAREN     shift, and go to state 13
    LBRACK     shift, and go to state 14


State 12

    6 var_declaration: type_specifier ID SEMICOLON •

    $default  reduce using rule 6 (var_declaration)


State 13

   10 fun_declaration: type_specifier ID LPAREN • params RPAREN compound_decl

    INT   shift, and go to state 1
    VOID  shift, and go to state 15

    type_specifier  go to state 16
    params          go to state 17
    param_list      go to state 18
    param           go to state 19


State 14

    7 var_declaration: type_specifier ID LBRACK • NUM RBRACK SEMICOLON

    NUM  shift, and go to state 20


State 15

    9 type_specifier: VOID •
   12 params: VOID •

    RPAREN    reduce using rule 12 (params)
    $default  reduce using rule 9 (type_specifier)


State 16

   15 param: type_specifier • ID
   16      | type_specifier • ID LBRACK RBRACK

    ID  shift, and go to state 21


State 17

   10 fun_declaration: type_specifier ID LPAREN params • RPAREN compound_decl

    RPAREN  shift, and go to state 22


State 18

   11 params: param_list •
   13 param_list: param_list • COMMA param

    COMMA  shift, and go to state 23

    $default  reduce using rule 11 (params)


State 19

   14 param_list: param •

    $default  reduce using rule 14 (param_list)


State 20

    7 var_declaration: type_specifier ID LBRACK NUM • RBRACK SEMICOLON

    RBRACK  shift, and go to state 24


State 21

   15 param: type_specifier ID •
   16      | type_specifier ID • LBRACK RBRACK

    LBRACK  shift, and go to state 25

    $default  reduce using rule 15 (param)


State 22

   10 fun_declaration: type_specifier ID LPAREN params RPAREN • compound_decl

    LBRACE  shift, and go to state 26

    compound_decl  go to state 27


State 23

   13 param_list: param_list COMMA • param

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    type_specifier  go to state 16
    param           go to state 28


State 24

    7 var_declaration: type_specifier ID LBRACK NUM RBRACK • SEMICOLON

    SEMICOLON  shift, and go to state 29


State 25

   16 param: type_specifier ID LBRACK • RBRACK

    RBRACK  shift, and go to state 30


State 26

   17 compound_decl: LBRACE • local_declarations statement_list RBRACE

    $default  reduce using rule 19 (local_declarations)

    local_declarations  go to state 31


State 27

   10 fun_declaration: type_specifier ID LPAREN params RPAREN compound_decl •

    $default  reduce using rule 10 (fun_declaration)


State 28

   13 param_list: param_list COMMA param •

    $default  reduce using rule 13 (param_list)


State 29

    7 var_declaration: type_specifier ID LBRACK NUM RBRACK SEMICOLON •

    $default  reduce using rule 7 (var_declaration)


State 30

   16 param: type_specifier ID LBRACK RBRACK •

    $default  reduce using rule 16 (param)


State 31

   17 compound_decl: LBRACE local_declarations • statement_list RBRACE
   18 local_declarations: local_declarations • var_declaration

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    $default  reduce using rule 21 (statement_list)

    var_declaration  go to state 32
    type_specifier   go to state 33
    statement_list   go to state 34


State 32

   18 local_declarations: local_declarations var_declaration •

    $default  reduce using rule 18 (local_declarations)


State 33

    6 var_declaration: type_specifier • ID SEMICOLON
    7                | type_specifier • ID LBRACK NUM RBRACK SEMICOLON

    ID  shift, and go to state 35


State 34

   17 compound_decl: LBRACE local_declarations statement_list • RBRACE
   20 statement_list: statement_list • statement

    IF      shift, and go to state 36
    WHILE   shift, and go to state 37
    RETURN  shift, and go to state 38
    NUM     shift, and go to state 39
    ID      shift, and go to state 40
    LPAREN  shift, and go to state 41
    LBRACE  shift, and go to state 26
    RBRACE  shift, and go to state 42

    compound_decl      go to state 43
    statement          go to state 44
    expression_decl    go to state 45
    selection_decl     go to state 46
    iteration_decl     go to state 47
    return_decl        go to state 48
    expression         go to state 49
    var                go to state 50
    simple_expression  go to state 51
    sum_expression     go to state 52
    term               go to state 53
    factor             go to state 54
    call               go to state 55


State 35

    6 var_declaration: type_specifier ID • SEMICOLON
    7                | type_specifier ID • LBRACK NUM RBRACK SEMICOLON

    SEMICOLON  shift, and go to state 12
    LBRACK     shift, and go to state 14


State 36

   28 selection_decl: IF • LPAREN expression RPAREN statement
   29               | IF • LPAREN expression RPAREN statement ELSE statement

    LPAREN  shift, and go to state 56


State 37

   30 iteration_decl: WHILE • LPAREN expression RPAREN statement

    LPAREN  shift, and go to state 57


State 38

   31 return_decl: RETURN • SEMICOLON
   32            | RETURN • expression SEMICOLON

    NUM        shift, and go to state 39
    ID         shift, and go to state 40
    SEMICOLON  shift, and go to state 58
    LPAREN     shift, and go to state 41

    expression         go to state 59
    var                go to state 50
    simple_expression  go to state 51
    sum_expression     go to state 52
    term               go to state 53
    factor             go to state 54
    call               go to state 55


State 39

   56 factor: NUM •

    $default  reduce using rule 56 (factor)


State 40

   35 var: ID •
   36    | ID • LBRACK expression RBRACK
   57 call: ID • LPAREN args RPAREN

    LPAREN  shift, and go to state 60
    LBRACK  shift, and go to state 61

    $default  reduce using rule 35 (var)


State 41

   53 factor: LPAREN • expression RPAREN

    NUM     shift, and go to state 39
    ID      shift, and go to state 40
    LPAREN  shift, and go to state 41

    expression         go to state 62
    var                go to state 50
    simple_expression  go to state 51
    sum_expression     go to state 52
    term               go to state 53
    factor             go to state 54
    call               go to state 55


State 42

   17 compound_decl: LBRACE local_declarations statement_list RBRACE •

    $default  reduce using rule 17 (compound_decl)


State 43

   23 statement: compound_decl •

    $default  reduce using rule 23 (statement)


State 44

   20 statement_list: statement_list statement •

    $default  reduce using rule 20 (statement_list)


State 45

   22 statement: expression_decl •

    $default  reduce using rule 22 (statement)


State 46

   24 statement: selection_decl •

    $default  reduce using rule 24 (statement)


State 47

   25 statement: iteration_decl •

    $default  reduce using rule 25 (statement)


State 48

   26 statement: return_decl •

    $default  reduce using rule 26 (statement)


State 49

   27 expression_decl: expression • SEMICOLON

    SEMICOLON  shift, and go to state 63


State 50

   33 expression: var • ASSIGN expression
   54 factor: var •

    ASSIGN  shift, and go to state 64

    $default  reduce using rule 54 (factor)


State 51

   34 expression: simple_expression •

    $default  reduce using rule 34 (expression)


State 52

   37 simple_expression: sum_expression • relational sum_expression
   38                  | sum_expression •
   45 sum_expression: sum_expression • sum term

    EQ     shift, and go to state 65
    NEQ    shift, and go to state 66
    LT     shift, and go to state 67
    LTE    shift, and go to state 68
    GT     shift, and go to state 69
    GTE    shift, and go to state 70
    PLUS   shift, and go to state 71
    MINUS  shift, and go to state 72

    $default  reduce using rule 38 (simple_expression)

    relational  go to state 73
    sum         go to state 74


State 53

   46 sum_expression: term •
   49 term: term • mult factor

    TIMES  shift, and go to state 75
    DIV    shift, and go to state 76

    $default  reduce using rule 46 (sum_expression)

    mult  go to state 77


State 54

   50 term: factor •

    $default  reduce using rule 50 (term)


State 55

   55 factor: call •

    $default  reduce using rule 55 (factor)


State 56

   28 selection_decl: IF LPAREN • expression RPAREN statement
   29               | IF LPAREN • expression RPAREN statement ELSE statement

    NUM     shift, and go to state 39
    ID      shift, and go to state 40
    LPAREN  shift, and go to state 41

    expression         go to state 78
    var                go to state 50
    simple_expression  go to state 51
    sum_expression     go to state 52
    term               go to state 53
    factor             go to state 54
    call               go to state 55


State 57

   30 iteration_decl: WHILE LPAREN • expression RPAREN statement

    NUM     shift, and go to state 39
    ID      shift, and go to state 40
    LPAREN  shift, and go to state 41

    expression         go to state 79
    var                go to state 50
    simple_expression  go to state 51
    sum_expression     go to state 52
    term               go to state 53
    factor             go to state 54
    call               go to state 55


State 58

   31 return_decl: RETURN SEMICOLON •

    $default  reduce using rule 31 (return_decl)


State 59

   32 return_decl: RETURN expression • SEMICOLON

    SEMICOLON  shift, and go to state 80


State 60

   57 call: ID LPAREN • args RPAREN

    INT     shift, and go to state 1
    VOID    shift, and go to state 2
    NUM     shift, and go to state 39
    ID      shift, and go to state 40
    LPAREN  shift, and go to state 41

    $default  reduce using rule 59 (args)

    type_specifier     go to state 16
    param              go to state 81
    expression         go to state 82
    var                go to state 50
    simple_expression  go to state 51
    sum_expression     go to state 52
    term               go to state 53
    factor             go to state 54
    call               go to state 55
    args               go to state 83
    arg_list           go to state 84


State 61

   36 var: ID LBRACK • expression RBRACK

    NUM     shift, and go to state 39
    ID      shift, and go to state 40
    LPAREN  shift, and go to state 41

    expression         go to state 85
    var                go to state 50
    simple_expression  go to state 51
    sum_expression     go to state 52
    term               go to state 53
    factor             go to state 54
    call               go to state 55


State 62

   53 factor: LPAREN expression • RPAREN

    RPAREN  shift, and go to state 86


State 63

   27 expression_decl: expression SEMICOLON •

    $default  reduce using rule 27 (expression_decl)


State 64

   33 expression: var ASSIGN • expression

    NUM     shift, and go to state 39
    ID      shift, and go to state 40
    LPAREN  shift, and go to state 41

    expression         go to state 87
    var                go to state 50
    simple_expression  go to state 51
    sum_expression     go to state 52
    term               go to state 53
    factor             go to state 54
    call               go to state 55


State 65

   43 relational: EQ •

    $default  reduce using rule 43 (relational)


State 66

   44 relational: NEQ •

    $default  reduce using rule 44 (relational)


State 67

   39 relational: LT •

    $default  reduce using rule 39 (relational)


State 68

   40 relational: LTE •

    $default  reduce using rule 40 (relational)


State 69

   41 relational: GT •

    $default  reduce using rule 41 (relational)


State 70

   42 relational: GTE •

    $default  reduce using rule 42 (relational)


State 71

   47 sum: PLUS •

    $default  reduce using rule 47 (sum)


State 72

   48 sum: MINUS •

    $default  reduce using rule 48 (sum)


State 73

   37 simple_expression: sum_expression relational • sum_expression

    NUM     shift, and go to state 39
    ID      shift, and go to state 40
    LPAREN  shift, and go to state 41

    var             go to state 88
    sum_expression  go to state 89
    term            go to state 53
    factor          go to state 54
    call            go to state 55


State 74

   45 sum_expression: sum_expression sum • term

    NUM     shift, and go to state 39
    ID      shift, and go to state 40
    LPAREN  shift, and go to state 41

    var     go to state 88
    term    go to state 90
    factor  go to state 54
    call    go to state 55


State 75

   51 mult: TIMES •

    $default  reduce using rule 51 (mult)


State 76

   52 mult: DIV •

    $default  reduce using rule 52 (mult)


State 77

   49 term: term mult • factor

    NUM     shift, and go to state 39
    ID      shift, and go to state 40
    LPAREN  shift, and go to state 41

    var     go to state 88
    factor  go to state 91
    call    go to state 55


State 78

   28 selection_decl: IF LPAREN expression • RPAREN statement
   29               | IF LPAREN expression • RPAREN statement ELSE statement

    RPAREN  shift, and go to state 92


State 79

   30 iteration_decl: WHILE LPAREN expression • RPAREN statement

    RPAREN  shift, and go to state 93


State 80

   32 return_decl: RETURN expression SEMICOLON •

    $default  reduce using rule 32 (return_decl)


State 81

   62 arg_list: param •

    $default  reduce using rule 62 (arg_list)


State 82

   61 arg_list: expression •

    $default  reduce using rule 61 (arg_list)


State 83

   57 call: ID LPAREN args • RPAREN

    RPAREN  shift, and go to state 94


State 84

   58 args: arg_list •
   60 arg_list: arg_list • COMMA expression

    COMMA  shift, and go to state 95

    $default  reduce using rule 58 (args)


State 85

   36 var: ID LBRACK expression • RBRACK

    RBRACK  shift, and go to state 96


State 86

   53 factor: LPAREN expression RPAREN •

    $default  reduce using rule 53 (factor)


State 87

   33 expression: var ASSIGN expression •

    $default  reduce using rule 33 (expression)


State 88

   54 factor: var •

    $default  reduce using rule 54 (factor)


State 89

   37 simple_expression: sum_expression relational sum_expression •
   45 sum_expression: sum_expression • sum term

    PLUS   shift, and go to state 71
    MINUS  shift, and go to state 72

    $default  reduce using rule 37 (simple_expression)

    sum  go to state 74


State 90

   45 sum_expression: sum_expression sum term •
   49 term: term • mult factor

    TIMES  shift, and go to state 75
    DIV    shift, and go to state 76

    $default  reduce using rule 45 (sum_expression)

    mult  go to state 77


State 91

   49 term: term mult factor •

    $default  reduce using rule 49 (term)


State 92

   28 selection_decl: IF LPAREN expression RPAREN • statement
   29               | IF LPAREN expression RPAREN • statement ELSE statement

    IF      shift, and go to state 36
    WHILE   shift, and go to state 37
    RETURN  shift, and go to state 38
    NUM     shift, and go to state 39
    ID      shift, and go to state 40
    LPAREN  shift, and go to state 41
    LBRACE  shift, and go to state 26

    compound_decl      go to state 43
    statement          go to state 97
    expression_decl    go to state 45
    selection_decl     go to state 46
    iteration_decl     go to state 47
    return_decl        go to state 48
    expression         go to state 49
    var                go to state 50
    simple_expression  go to state 51
    sum_expression     go to state 52
    term               go to state 53
    factor             go to state 54
    call               go to state 55


State 93

   30 iteration_decl: WHILE LPAREN expression RPAREN • statement

    IF      shift, and go to state 36
    WHILE   shift, and go to state 37
    RETURN  shift, and go to state 38
    NUM     shift, and go to state 39
    ID      shift, and go to state 40
    LPAREN  shift, and go to state 41
    LBRACE  shift, and go to state 26

    compound_decl      go to state 43
    statement          go to state 98
    expression_decl    go to state 45
    selection_decl     go to state 46
    iteration_decl     go to state 47
    return_decl        go to state 48
    expression         go to state 49
    var                go to state 50
    simple_expression  go to state 51
    sum_expression     go to state 52
    term               go to state 53
    factor             go to state 54
    call               go to state 55


State 94

   57 call: ID LPAREN args RPAREN •

    $default  reduce using rule 57 (call)


State 95

   60 arg_list: arg_list COMMA • expression

    NUM     shift, and go to state 39
    ID      shift, and go to state 40
    LPAREN  shift, and go to state 41

    expression         go to state 99
    var                go to state 50
    simple_expression  go to state 51
    sum_expression     go to state 52
    term               go to state 53
    factor             go to state 54
    call               go to state 55


State 96

   36 var: ID LBRACK expression RBRACK •

    $default  reduce using rule 36 (var)


State 97

   28 selection_decl: IF LPAREN expression RPAREN statement •
   29               | IF LPAREN expression RPAREN statement • ELSE statement

    $default  reduce using rule 28 (selection_decl)


State 98

   30 iteration_decl: WHILE LPAREN expression RPAREN statement •

    $default  reduce using rule 30 (iteration_decl)


State 99

   60 arg_list: arg_list COMMA expression •

    $default  reduce using rule 60 (arg_list)
