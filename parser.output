State 24 conflicts: 2 shift/reduce


Grammar

    0 $accept: program $end

    1 program: declaration_list

    2 declaration_list: declaration_list declaration
    3                 | declaration

    4 declaration: var_declaration
    5            | fun_declaration

    6 var_declaration: type_specifier ID SEMICOLON

    7 type_specifier: INT
    8               | VOID

    9 $@1: ε

   10 fun_declaration: type_specifier ID LPAREN $@1 params RPAREN compound_stmt

   11 params: param_list
   12       | VOID

   13 param_list: param_list COMMA param
   14           | param

   15 param: type_specifier ID
   16      | type_specifier ID LBRACK RBRACK

   17 compound_stmt: LBRACE local_declarations statement_list RBRACE

   18 local_declarations: local_declarations var_declaration
   19                   | var_declaration
   20                   | ε

   21 statement_list: statement_list statement
   22               | statement

   23 statement: expression_stmt
   24          | compound_stmt
   25          | selection_stmt
   26          | iteration_stmt
   27          | return_stmt

   28 expression_stmt: expression SEMICOLON
   29                | SEMICOLON

   30 selection_stmt: IF LPAREN expression RPAREN statement
   31               | IF LPAREN expression RPAREN statement ELSE statement

   32 iteration_stmt: WHILE LPAREN expression RPAREN statement

   33 return_stmt: RETURN SEMICOLON
   34            | RETURN expression SEMICOLON

   35 expression: var ASSIGN expression
   36           | simple_expression

   37 var: ID
   38    | ID LBRACK expression RBRACK

   39 simple_expression: additive_expression relop additive_expression
   40                  | additive_expression

   41 relop: LTE
   42      | LT
   43      | GT
   44      | GTE
   45      | EQ
   46      | NEQ

   47 additive_expression: additive_expression addop term
   48                    | term

   49 addop: PLUS
   50      | MINUS

   51 term: term mulop factor
   52     | factor

   53 mulop: TIMES
   54      | DIV
   55      | MOD

   56 factor: LPAREN expression RPAREN
   57       | var
   58       | call
   59       | NUM

   60 call: ID LPAREN args RPAREN

   61 args: arg_list
   62     | ε

   63 arg_list: arg_list COMMA expression
   64         | expression


Terminals, with rules where they appear

    $end (0) 0
    IF (1) 30 31
    WHILE (2) 32
    RETURN (3) 33 34
    INT (4) 7
    VOID (5) 8 12
    EQ (8) 45
    NEQ (9) 46
    LT (10) 42
    LTE (11) 41
    GT (12) 43
    GTE (13) 44
    PLUS (14) 49
    MINUS (15) 50
    TIMES (16) 53
    DIV (17) 54
    ASSIGN (18) 35
    SEMICOLON (19) 6 28 29 33 34
    COMMA (20) 13 63
    LPAREN (21) 10 30 31 32 56 60
    RPAREN (22) 10 30 31 32 56 60
    LBRACE (23) 17
    RBRACE (24) 17
    LBRACK (25) 16 38
    RBRACK (26) 16 38
    MOD (28) 55
    error (256)
    ID <sval> (258) 6 10 15 16 37 38 60
    NUM <ival> (259) 59
    LOWER_THAN_ELSE (260)
    ELSE (261) 31


Nonterminals, with rules where they appear

    $accept (32)
        on left: 0
    program <ast> (33)
        on left: 1
        on right: 0
    declaration_list <ast> (34)
        on left: 2 3
        on right: 1 2
    declaration <ast> (35)
        on left: 4 5
        on right: 2 3
    var_declaration <ast> (36)
        on left: 6
        on right: 4 18 19
    type_specifier <ival> (37)
        on left: 7 8
        on right: 6 10 15 16
    fun_declaration <ast> (38)
        on left: 10
        on right: 5
    $@1 (39)
        on left: 9
        on right: 10
    params <ast> (40)
        on left: 11 12
        on right: 10
    param_list <ast> (41)
        on left: 13 14
        on right: 11 13
    param <ast> (42)
        on left: 15 16
        on right: 13 14
    compound_stmt <ast> (43)
        on left: 17
        on right: 10 24
    local_declarations <ast> (44)
        on left: 18 19 20
        on right: 17 18
    statement_list <ast> (45)
        on left: 21 22
        on right: 17 21
    statement <ast> (46)
        on left: 23 24 25 26 27
        on right: 21 22 30 31 32
    expression_stmt <ast> (47)
        on left: 28 29
        on right: 23
    selection_stmt <ast> (48)
        on left: 30 31
        on right: 25
    iteration_stmt <ast> (49)
        on left: 32
        on right: 26
    return_stmt <ast> (50)
        on left: 33 34
        on right: 27
    expression <ast> (51)
        on left: 35 36
        on right: 28 30 31 32 34 35 38 56 63 64
    var <ast> (52)
        on left: 37 38
        on right: 35 57
    simple_expression <ast> (53)
        on left: 39 40
        on right: 36
    relop <ast> (54)
        on left: 41 42 43 44 45 46
        on right: 39
    additive_expression <ast> (55)
        on left: 47 48
        on right: 39 40 47
    addop <ast> (56)
        on left: 49 50
        on right: 47
    term <ast> (57)
        on left: 51 52
        on right: 47 48 51
    mulop <ast> (58)
        on left: 53 54 55
        on right: 51
    factor <ast> (59)
        on left: 56 57 58 59
        on right: 51 52
    call <ast> (60)
        on left: 60
        on right: 58
    args <ast> (61)
        on left: 61 62
        on right: 60
    arg_list <ast> (62)
        on left: 63 64
        on right: 61 63


State 0

    0 $accept: • program $end

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    program           go to state 3
    declaration_list  go to state 4
    declaration       go to state 5
    var_declaration   go to state 6
    type_specifier    go to state 7
    fun_declaration   go to state 8


State 1

    7 type_specifier: INT •

    $default  reduce using rule 7 (type_specifier)


State 2

    8 type_specifier: VOID •

    $default  reduce using rule 8 (type_specifier)


State 3

    0 $accept: program • $end

    $end  shift, and go to state 9


State 4

    1 program: declaration_list •
    2 declaration_list: declaration_list • declaration

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    $default  reduce using rule 1 (program)

    declaration      go to state 10
    var_declaration  go to state 6
    type_specifier   go to state 7
    fun_declaration  go to state 8


State 5

    3 declaration_list: declaration •

    $default  reduce using rule 3 (declaration_list)


State 6

    4 declaration: var_declaration •

    $default  reduce using rule 4 (declaration)


State 7

    6 var_declaration: type_specifier • ID SEMICOLON
   10 fun_declaration: type_specifier • ID LPAREN $@1 params RPAREN compound_stmt

    ID  shift, and go to state 11


State 8

    5 declaration: fun_declaration •

    $default  reduce using rule 5 (declaration)


State 9

    0 $accept: program $end •

    $default  accept


State 10

    2 declaration_list: declaration_list declaration •

    $default  reduce using rule 2 (declaration_list)


State 11

    6 var_declaration: type_specifier ID • SEMICOLON
   10 fun_declaration: type_specifier ID • LPAREN $@1 params RPAREN compound_stmt

    SEMICOLON  shift, and go to state 12
    LPAREN     shift, and go to state 13


State 12

    6 var_declaration: type_specifier ID SEMICOLON •

    $default  reduce using rule 6 (var_declaration)


State 13

   10 fun_declaration: type_specifier ID LPAREN • $@1 params RPAREN compound_stmt

    $default  reduce using rule 9 ($@1)

    $@1  go to state 14


State 14

   10 fun_declaration: type_specifier ID LPAREN $@1 • params RPAREN compound_stmt

    INT   shift, and go to state 1
    VOID  shift, and go to state 15

    type_specifier  go to state 16
    params          go to state 17
    param_list      go to state 18
    param           go to state 19


State 15

    8 type_specifier: VOID •
   12 params: VOID •

    RPAREN    reduce using rule 12 (params)
    $default  reduce using rule 8 (type_specifier)


State 16

   15 param: type_specifier • ID
   16      | type_specifier • ID LBRACK RBRACK

    ID  shift, and go to state 20


State 17

   10 fun_declaration: type_specifier ID LPAREN $@1 params • RPAREN compound_stmt

    RPAREN  shift, and go to state 21


State 18

   11 params: param_list •
   13 param_list: param_list • COMMA param

    COMMA  shift, and go to state 22

    $default  reduce using rule 11 (params)


State 19

   14 param_list: param •

    $default  reduce using rule 14 (param_list)


State 20

   15 param: type_specifier ID •
   16      | type_specifier ID • LBRACK RBRACK

    LBRACK  shift, and go to state 23

    $default  reduce using rule 15 (param)


State 21

   10 fun_declaration: type_specifier ID LPAREN $@1 params RPAREN • compound_stmt

    LBRACE  shift, and go to state 24

    compound_stmt  go to state 25


State 22

   13 param_list: param_list COMMA • param

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    type_specifier  go to state 16
    param           go to state 26


State 23

   16 param: type_specifier ID LBRACK • RBRACK

    RBRACK  shift, and go to state 27


State 24

   17 compound_stmt: LBRACE • local_declarations statement_list RBRACE

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    INT       [reduce using rule 20 (local_declarations)]
    VOID      [reduce using rule 20 (local_declarations)]
    $default  reduce using rule 20 (local_declarations)

    var_declaration     go to state 28
    type_specifier      go to state 29
    local_declarations  go to state 30

    shift/reduce conflict on token INT:
       20 local_declarations: ε •
        7 type_specifier: • INT
      Example: • INT ID SEMICOLON
      Shift derivation
        local_declarations
        ↳ 19: var_declaration
              ↳ 6: type_specifier ID SEMICOLON
                   ↳ 7: • INT
      Reduce derivation
        local_declarations
        ↳ 18: local_declarations var_declaration
              ↳ 20: ε •          ↳ 6: type_specifier ID SEMICOLON
                                      ↳ 7: INT

    shift/reduce conflict on token VOID:
       20 local_declarations: ε •
        8 type_specifier: • VOID
      Example: • VOID ID SEMICOLON
      Shift derivation
        local_declarations
        ↳ 19: var_declaration
              ↳ 6: type_specifier ID SEMICOLON
                   ↳ 8: • VOID
      Reduce derivation
        local_declarations
        ↳ 18: local_declarations var_declaration
              ↳ 20: ε •          ↳ 6: type_specifier ID SEMICOLON
                                      ↳ 8: VOID



State 25

   10 fun_declaration: type_specifier ID LPAREN $@1 params RPAREN compound_stmt •

    $default  reduce using rule 10 (fun_declaration)


State 26

   13 param_list: param_list COMMA param •

    $default  reduce using rule 13 (param_list)


State 27

   16 param: type_specifier ID LBRACK RBRACK •

    $default  reduce using rule 16 (param)


State 28

   19 local_declarations: var_declaration •

    $default  reduce using rule 19 (local_declarations)


State 29

    6 var_declaration: type_specifier • ID SEMICOLON

    ID  shift, and go to state 31


State 30

   17 compound_stmt: LBRACE local_declarations • statement_list RBRACE
   18 local_declarations: local_declarations • var_declaration

    ID         shift, and go to state 32
    NUM        shift, and go to state 33
    IF         shift, and go to state 34
    WHILE      shift, and go to state 35
    RETURN     shift, and go to state 36
    INT        shift, and go to state 1
    VOID       shift, and go to state 2
    SEMICOLON  shift, and go to state 37
    LPAREN     shift, and go to state 38
    LBRACE     shift, and go to state 24

    var_declaration      go to state 39
    type_specifier       go to state 29
    compound_stmt        go to state 40
    statement_list       go to state 41
    statement            go to state 42
    expression_stmt      go to state 43
    selection_stmt       go to state 44
    iteration_stmt       go to state 45
    return_stmt          go to state 46
    expression           go to state 47
    var                  go to state 48
    simple_expression    go to state 49
    additive_expression  go to state 50
    term                 go to state 51
    factor               go to state 52
    call                 go to state 53


State 31

    6 var_declaration: type_specifier ID • SEMICOLON

    SEMICOLON  shift, and go to state 12


State 32

   37 var: ID •
   38    | ID • LBRACK expression RBRACK
   60 call: ID • LPAREN args RPAREN

    LPAREN  shift, and go to state 54
    LBRACK  shift, and go to state 55

    $default  reduce using rule 37 (var)


State 33

   59 factor: NUM •

    $default  reduce using rule 59 (factor)


State 34

   30 selection_stmt: IF • LPAREN expression RPAREN statement
   31               | IF • LPAREN expression RPAREN statement ELSE statement

    LPAREN  shift, and go to state 56


State 35

   32 iteration_stmt: WHILE • LPAREN expression RPAREN statement

    LPAREN  shift, and go to state 57


State 36

   33 return_stmt: RETURN • SEMICOLON
   34            | RETURN • expression SEMICOLON

    ID         shift, and go to state 32
    NUM        shift, and go to state 33
    SEMICOLON  shift, and go to state 58
    LPAREN     shift, and go to state 38

    expression           go to state 59
    var                  go to state 48
    simple_expression    go to state 49
    additive_expression  go to state 50
    term                 go to state 51
    factor               go to state 52
    call                 go to state 53


State 37

   29 expression_stmt: SEMICOLON •

    $default  reduce using rule 29 (expression_stmt)


State 38

   56 factor: LPAREN • expression RPAREN

    ID      shift, and go to state 32
    NUM     shift, and go to state 33
    LPAREN  shift, and go to state 38

    expression           go to state 60
    var                  go to state 48
    simple_expression    go to state 49
    additive_expression  go to state 50
    term                 go to state 51
    factor               go to state 52
    call                 go to state 53


State 39

   18 local_declarations: local_declarations var_declaration •

    $default  reduce using rule 18 (local_declarations)


State 40

   24 statement: compound_stmt •

    $default  reduce using rule 24 (statement)


State 41

   17 compound_stmt: LBRACE local_declarations statement_list • RBRACE
   21 statement_list: statement_list • statement

    ID         shift, and go to state 32
    NUM        shift, and go to state 33
    IF         shift, and go to state 34
    WHILE      shift, and go to state 35
    RETURN     shift, and go to state 36
    SEMICOLON  shift, and go to state 37
    LPAREN     shift, and go to state 38
    LBRACE     shift, and go to state 24
    RBRACE     shift, and go to state 61

    compound_stmt        go to state 40
    statement            go to state 62
    expression_stmt      go to state 43
    selection_stmt       go to state 44
    iteration_stmt       go to state 45
    return_stmt          go to state 46
    expression           go to state 47
    var                  go to state 48
    simple_expression    go to state 49
    additive_expression  go to state 50
    term                 go to state 51
    factor               go to state 52
    call                 go to state 53


State 42

   22 statement_list: statement •

    $default  reduce using rule 22 (statement_list)


State 43

   23 statement: expression_stmt •

    $default  reduce using rule 23 (statement)


State 44

   25 statement: selection_stmt •

    $default  reduce using rule 25 (statement)


State 45

   26 statement: iteration_stmt •

    $default  reduce using rule 26 (statement)


State 46

   27 statement: return_stmt •

    $default  reduce using rule 27 (statement)


State 47

   28 expression_stmt: expression • SEMICOLON

    SEMICOLON  shift, and go to state 63


State 48

   35 expression: var • ASSIGN expression
   57 factor: var •

    ASSIGN  shift, and go to state 64

    $default  reduce using rule 57 (factor)


State 49

   36 expression: simple_expression •

    $default  reduce using rule 36 (expression)


State 50

   39 simple_expression: additive_expression • relop additive_expression
   40                  | additive_expression •
   47 additive_expression: additive_expression • addop term

    EQ     shift, and go to state 65
    NEQ    shift, and go to state 66
    LT     shift, and go to state 67
    LTE    shift, and go to state 68
    GT     shift, and go to state 69
    GTE    shift, and go to state 70
    PLUS   shift, and go to state 71
    MINUS  shift, and go to state 72

    $default  reduce using rule 40 (simple_expression)

    relop  go to state 73
    addop  go to state 74


State 51

   48 additive_expression: term •
   51 term: term • mulop factor

    TIMES  shift, and go to state 75
    DIV    shift, and go to state 76
    MOD    shift, and go to state 77

    $default  reduce using rule 48 (additive_expression)

    mulop  go to state 78


State 52

   52 term: factor •

    $default  reduce using rule 52 (term)


State 53

   58 factor: call •

    $default  reduce using rule 58 (factor)


State 54

   60 call: ID LPAREN • args RPAREN

    ID      shift, and go to state 32
    NUM     shift, and go to state 33
    LPAREN  shift, and go to state 38

    $default  reduce using rule 62 (args)

    expression           go to state 79
    var                  go to state 48
    simple_expression    go to state 49
    additive_expression  go to state 50
    term                 go to state 51
    factor               go to state 52
    call                 go to state 53
    args                 go to state 80
    arg_list             go to state 81


State 55

   38 var: ID LBRACK • expression RBRACK

    ID      shift, and go to state 32
    NUM     shift, and go to state 33
    LPAREN  shift, and go to state 38

    expression           go to state 82
    var                  go to state 48
    simple_expression    go to state 49
    additive_expression  go to state 50
    term                 go to state 51
    factor               go to state 52
    call                 go to state 53


State 56

   30 selection_stmt: IF LPAREN • expression RPAREN statement
   31               | IF LPAREN • expression RPAREN statement ELSE statement

    ID      shift, and go to state 32
    NUM     shift, and go to state 33
    LPAREN  shift, and go to state 38

    expression           go to state 83
    var                  go to state 48
    simple_expression    go to state 49
    additive_expression  go to state 50
    term                 go to state 51
    factor               go to state 52
    call                 go to state 53


State 57

   32 iteration_stmt: WHILE LPAREN • expression RPAREN statement

    ID      shift, and go to state 32
    NUM     shift, and go to state 33
    LPAREN  shift, and go to state 38

    expression           go to state 84
    var                  go to state 48
    simple_expression    go to state 49
    additive_expression  go to state 50
    term                 go to state 51
    factor               go to state 52
    call                 go to state 53


State 58

   33 return_stmt: RETURN SEMICOLON •

    $default  reduce using rule 33 (return_stmt)


State 59

   34 return_stmt: RETURN expression • SEMICOLON

    SEMICOLON  shift, and go to state 85


State 60

   56 factor: LPAREN expression • RPAREN

    RPAREN  shift, and go to state 86


State 61

   17 compound_stmt: LBRACE local_declarations statement_list RBRACE •

    $default  reduce using rule 17 (compound_stmt)


State 62

   21 statement_list: statement_list statement •

    $default  reduce using rule 21 (statement_list)


State 63

   28 expression_stmt: expression SEMICOLON •

    $default  reduce using rule 28 (expression_stmt)


State 64

   35 expression: var ASSIGN • expression

    ID      shift, and go to state 32
    NUM     shift, and go to state 33
    LPAREN  shift, and go to state 38

    expression           go to state 87
    var                  go to state 48
    simple_expression    go to state 49
    additive_expression  go to state 50
    term                 go to state 51
    factor               go to state 52
    call                 go to state 53


State 65

   45 relop: EQ •

    $default  reduce using rule 45 (relop)


State 66

   46 relop: NEQ •

    $default  reduce using rule 46 (relop)


State 67

   42 relop: LT •

    $default  reduce using rule 42 (relop)


State 68

   41 relop: LTE •

    $default  reduce using rule 41 (relop)


State 69

   43 relop: GT •

    $default  reduce using rule 43 (relop)


State 70

   44 relop: GTE •

    $default  reduce using rule 44 (relop)


State 71

   49 addop: PLUS •

    $default  reduce using rule 49 (addop)


State 72

   50 addop: MINUS •

    $default  reduce using rule 50 (addop)


State 73

   39 simple_expression: additive_expression relop • additive_expression

    ID      shift, and go to state 32
    NUM     shift, and go to state 33
    LPAREN  shift, and go to state 38

    var                  go to state 88
    additive_expression  go to state 89
    term                 go to state 51
    factor               go to state 52
    call                 go to state 53


State 74

   47 additive_expression: additive_expression addop • term

    ID      shift, and go to state 32
    NUM     shift, and go to state 33
    LPAREN  shift, and go to state 38

    var     go to state 88
    term    go to state 90
    factor  go to state 52
    call    go to state 53


State 75

   53 mulop: TIMES •

    $default  reduce using rule 53 (mulop)


State 76

   54 mulop: DIV •

    $default  reduce using rule 54 (mulop)


State 77

   55 mulop: MOD •

    $default  reduce using rule 55 (mulop)


State 78

   51 term: term mulop • factor

    ID      shift, and go to state 32
    NUM     shift, and go to state 33
    LPAREN  shift, and go to state 38

    var     go to state 88
    factor  go to state 91
    call    go to state 53


State 79

   64 arg_list: expression •

    $default  reduce using rule 64 (arg_list)


State 80

   60 call: ID LPAREN args • RPAREN

    RPAREN  shift, and go to state 92


State 81

   61 args: arg_list •
   63 arg_list: arg_list • COMMA expression

    COMMA  shift, and go to state 93

    $default  reduce using rule 61 (args)


State 82

   38 var: ID LBRACK expression • RBRACK

    RBRACK  shift, and go to state 94


State 83

   30 selection_stmt: IF LPAREN expression • RPAREN statement
   31               | IF LPAREN expression • RPAREN statement ELSE statement

    RPAREN  shift, and go to state 95


State 84

   32 iteration_stmt: WHILE LPAREN expression • RPAREN statement

    RPAREN  shift, and go to state 96


State 85

   34 return_stmt: RETURN expression SEMICOLON •

    $default  reduce using rule 34 (return_stmt)


State 86

   56 factor: LPAREN expression RPAREN •

    $default  reduce using rule 56 (factor)


State 87

   35 expression: var ASSIGN expression •

    $default  reduce using rule 35 (expression)


State 88

   57 factor: var •

    $default  reduce using rule 57 (factor)


State 89

   39 simple_expression: additive_expression relop additive_expression •
   47 additive_expression: additive_expression • addop term

    PLUS   shift, and go to state 71
    MINUS  shift, and go to state 72

    $default  reduce using rule 39 (simple_expression)

    addop  go to state 74


State 90

   47 additive_expression: additive_expression addop term •
   51 term: term • mulop factor

    TIMES  shift, and go to state 75
    DIV    shift, and go to state 76
    MOD    shift, and go to state 77

    $default  reduce using rule 47 (additive_expression)

    mulop  go to state 78


State 91

   51 term: term mulop factor •

    $default  reduce using rule 51 (term)


State 92

   60 call: ID LPAREN args RPAREN •

    $default  reduce using rule 60 (call)


State 93

   63 arg_list: arg_list COMMA • expression

    ID      shift, and go to state 32
    NUM     shift, and go to state 33
    LPAREN  shift, and go to state 38

    expression           go to state 97
    var                  go to state 48
    simple_expression    go to state 49
    additive_expression  go to state 50
    term                 go to state 51
    factor               go to state 52
    call                 go to state 53


State 94

   38 var: ID LBRACK expression RBRACK •

    $default  reduce using rule 38 (var)


State 95

   30 selection_stmt: IF LPAREN expression RPAREN • statement
   31               | IF LPAREN expression RPAREN • statement ELSE statement

    ID         shift, and go to state 32
    NUM        shift, and go to state 33
    IF         shift, and go to state 34
    WHILE      shift, and go to state 35
    RETURN     shift, and go to state 36
    SEMICOLON  shift, and go to state 37
    LPAREN     shift, and go to state 38
    LBRACE     shift, and go to state 24

    compound_stmt        go to state 40
    statement            go to state 98
    expression_stmt      go to state 43
    selection_stmt       go to state 44
    iteration_stmt       go to state 45
    return_stmt          go to state 46
    expression           go to state 47
    var                  go to state 48
    simple_expression    go to state 49
    additive_expression  go to state 50
    term                 go to state 51
    factor               go to state 52
    call                 go to state 53


State 96

   32 iteration_stmt: WHILE LPAREN expression RPAREN • statement

    ID         shift, and go to state 32
    NUM        shift, and go to state 33
    IF         shift, and go to state 34
    WHILE      shift, and go to state 35
    RETURN     shift, and go to state 36
    SEMICOLON  shift, and go to state 37
    LPAREN     shift, and go to state 38
    LBRACE     shift, and go to state 24

    compound_stmt        go to state 40
    statement            go to state 99
    expression_stmt      go to state 43
    selection_stmt       go to state 44
    iteration_stmt       go to state 45
    return_stmt          go to state 46
    expression           go to state 47
    var                  go to state 48
    simple_expression    go to state 49
    additive_expression  go to state 50
    term                 go to state 51
    factor               go to state 52
    call                 go to state 53


State 97

   63 arg_list: arg_list COMMA expression •

    $default  reduce using rule 63 (arg_list)


State 98

   30 selection_stmt: IF LPAREN expression RPAREN statement •
   31               | IF LPAREN expression RPAREN statement • ELSE statement

    ELSE  shift, and go to state 100

    $default  reduce using rule 30 (selection_stmt)


State 99

   32 iteration_stmt: WHILE LPAREN expression RPAREN statement •

    $default  reduce using rule 32 (iteration_stmt)


State 100

   31 selection_stmt: IF LPAREN expression RPAREN statement ELSE • statement

    ID         shift, and go to state 32
    NUM        shift, and go to state 33
    IF         shift, and go to state 34
    WHILE      shift, and go to state 35
    RETURN     shift, and go to state 36
    SEMICOLON  shift, and go to state 37
    LPAREN     shift, and go to state 38
    LBRACE     shift, and go to state 24

    compound_stmt        go to state 40
    statement            go to state 101
    expression_stmt      go to state 43
    selection_stmt       go to state 44
    iteration_stmt       go to state 45
    return_stmt          go to state 46
    expression           go to state 47
    var                  go to state 48
    simple_expression    go to state 49
    additive_expression  go to state 50
    term                 go to state 51
    factor               go to state 52
    call                 go to state 53


State 101

   31 selection_stmt: IF LPAREN expression RPAREN statement ELSE statement •

    $default  reduce using rule 31 (selection_stmt)
