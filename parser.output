State 100 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: declaration_list

    2 declaration_list: declaration_list declaration
    3                 | declaration

    4 declaration: var_declaration
    5            | fun_declaration

    6 var_declaration: type_specifier ID SEMICOLON
    7                | type_specifier ID LBRACK NUM RBRACK SEMICOLON

    8 type_specifier: INT
    9               | VOID

   10 fun_declaration: type_specifier ID LPAREN params RPAREN compound_decl

   11 params: param_list
   12       | VOID

   13 param_list: param_list COMMA param
   14           | param

   15 param: type_specifier ID
   16      | type_specifier ID LBRACK RBRACK

   17 compound_decl: LBRACE local_declarations statement_list RBRACE

   18 local_declarations: local_declarations var_declaration
   19                   | ε

   20 statement_list: statement_list statement
   21               | ε

   22 statement: matched_stmt
   23          | unmatched_stmt

   24 matched_stmt: IF LPAREN expression RPAREN matched_stmt ELSE matched_stmt
   25             | other_stmt

   26 unmatched_stmt: IF LPAREN expression RPAREN statement
   27               | IF LPAREN expression RPAREN matched_stmt ELSE unmatched_stmt

   28 other_stmt: expression_decl
   29           | compound_decl
   30           | iteration_decl
   31           | return_decl

   32 expression_decl: expression SEMICOLON

   33 iteration_decl: WHILE LPAREN expression RPAREN statement

   34 return_decl: RETURN SEMICOLON
   35            | RETURN expression SEMICOLON

   36 expression: var ASSIGN expression
   37           | simple_expression

   38 var: ID
   39    | ID LBRACK expression RBRACK

   40 simple_expression: sum_expression relational sum_expression
   41                  | sum_expression

   42 relational: LT
   43           | LTE
   44           | GT
   45           | GTE
   46           | EQ
   47           | NEQ

   48 sum_expression: sum_expression sum term
   49               | term

   50 sum: PLUS
   51    | MINUS

   52 term: term mult factor
   53     | factor

   54 mult: TIMES
   55     | DIV

   56 factor: LPAREN expression RPAREN
   57       | var
   58       | call
   59       | NUM

   60 call: ID LPAREN args RPAREN

   61 args: arg_list
   62     | ε

   63 arg_list: arg_list COMMA expression
   64         | expression
   65         | param


Terminals, with rules where they appear

    $end (0) 0
    IF (1) 24 26 27
    WHILE (2) 33
    RETURN (3) 34 35
    INT (4) 8
    VOID (5) 9 12
    NUM (6) 7 59
    ID (7) 6 7 10 15 16 38 39 60
    EQ (8) 46
    NEQ (9) 47
    LT (10) 42
    LTE (11) 43
    GT (12) 44
    GTE (13) 45
    PLUS (14) 50
    MINUS (15) 51
    TIMES (16) 54
    DIV (17) 55
    ASSIGN (18) 36
    SEMICOLON (19) 6 7 32 34 35
    COMMA (20) 13 63
    LPAREN (21) 10 24 26 27 33 56 60
    RPAREN (22) 10 24 26 27 33 56 60
    LBRACE (23) 17
    RBRACE (24) 17
    LBRACK (25) 7 16 39
    RBRACK (26) 7 16 39
    ELSE (27) 24 27
    error (256)


Nonterminals, with rules where they appear

    $accept (30)
        on left: 0
    program (31)
        on left: 1
        on right: 0
    declaration_list (32)
        on left: 2 3
        on right: 1 2
    declaration (33)
        on left: 4 5
        on right: 2 3
    var_declaration (34)
        on left: 6 7
        on right: 4 18
    type_specifier (35)
        on left: 8 9
        on right: 6 7 10 15 16
    fun_declaration (36)
        on left: 10
        on right: 5
    params (37)
        on left: 11 12
        on right: 10
    param_list (38)
        on left: 13 14
        on right: 11 13
    param (39)
        on left: 15 16
        on right: 13 14 65
    compound_decl (40)
        on left: 17
        on right: 10 29
    local_declarations (41)
        on left: 18 19
        on right: 17 18
    statement_list (42)
        on left: 20 21
        on right: 17 20
    statement (43)
        on left: 22 23
        on right: 20 26 33
    matched_stmt (44)
        on left: 24 25
        on right: 22 24 27
    unmatched_stmt (45)
        on left: 26 27
        on right: 23 27
    other_stmt (46)
        on left: 28 29 30 31
        on right: 25
    expression_decl (47)
        on left: 32
        on right: 28
    iteration_decl (48)
        on left: 33
        on right: 30
    return_decl (49)
        on left: 34 35
        on right: 31
    expression (50)
        on left: 36 37
        on right: 24 26 27 32 33 35 36 39 56 63 64
    var (51)
        on left: 38 39
        on right: 36 57
    simple_expression (52)
        on left: 40 41
        on right: 37
    relational (53)
        on left: 42 43 44 45 46 47
        on right: 40
    sum_expression (54)
        on left: 48 49
        on right: 40 41 48
    sum (55)
        on left: 50 51
        on right: 48
    term (56)
        on left: 52 53
        on right: 48 49 52
    mult (57)
        on left: 54 55
        on right: 52
    factor (58)
        on left: 56 57 58 59
        on right: 52 53
    call (59)
        on left: 60
        on right: 58
    args (60)
        on left: 61 62
        on right: 60
    arg_list (61)
        on left: 63 64 65
        on right: 61 63


State 0

    0 $accept: • program $end

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    program           go to state 3
    declaration_list  go to state 4
    declaration       go to state 5
    var_declaration   go to state 6
    type_specifier    go to state 7
    fun_declaration   go to state 8


State 1

    8 type_specifier: INT •

    $default  reduce using rule 8 (type_specifier)


State 2

    9 type_specifier: VOID •

    $default  reduce using rule 9 (type_specifier)


State 3

    0 $accept: program • $end

    $end  shift, and go to state 9


State 4

    1 program: declaration_list •
    2 declaration_list: declaration_list • declaration

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    $default  reduce using rule 1 (program)

    declaration      go to state 10
    var_declaration  go to state 6
    type_specifier   go to state 7
    fun_declaration  go to state 8


State 5

    3 declaration_list: declaration •

    $default  reduce using rule 3 (declaration_list)


State 6

    4 declaration: var_declaration •

    $default  reduce using rule 4 (declaration)


State 7

    6 var_declaration: type_specifier • ID SEMICOLON
    7                | type_specifier • ID LBRACK NUM RBRACK SEMICOLON
   10 fun_declaration: type_specifier • ID LPAREN params RPAREN compound_decl

    ID  shift, and go to state 11


State 8

    5 declaration: fun_declaration •

    $default  reduce using rule 5 (declaration)


State 9

    0 $accept: program $end •

    $default  accept


State 10

    2 declaration_list: declaration_list declaration •

    $default  reduce using rule 2 (declaration_list)


State 11

    6 var_declaration: type_specifier ID • SEMICOLON
    7                | type_specifier ID • LBRACK NUM RBRACK SEMICOLON
   10 fun_declaration: type_specifier ID • LPAREN params RPAREN compound_decl

    SEMICOLON  shift, and go to state 12
    LPAREN     shift, and go to state 13
    LBRACK     shift, and go to state 14


State 12

    6 var_declaration: type_specifier ID SEMICOLON •

    $default  reduce using rule 6 (var_declaration)


State 13

   10 fun_declaration: type_specifier ID LPAREN • params RPAREN compound_decl

    INT   shift, and go to state 1
    VOID  shift, and go to state 15

    type_specifier  go to state 16
    params          go to state 17
    param_list      go to state 18
    param           go to state 19


State 14

    7 var_declaration: type_specifier ID LBRACK • NUM RBRACK SEMICOLON

    NUM  shift, and go to state 20


State 15

    9 type_specifier: VOID •
   12 params: VOID •

    RPAREN    reduce using rule 12 (params)
    $default  reduce using rule 9 (type_specifier)


State 16

   15 param: type_specifier • ID
   16      | type_specifier • ID LBRACK RBRACK

    ID  shift, and go to state 21


State 17

   10 fun_declaration: type_specifier ID LPAREN params • RPAREN compound_decl

    RPAREN  shift, and go to state 22


State 18

   11 params: param_list •
   13 param_list: param_list • COMMA param

    COMMA  shift, and go to state 23

    $default  reduce using rule 11 (params)


State 19

   14 param_list: param •

    $default  reduce using rule 14 (param_list)


State 20

    7 var_declaration: type_specifier ID LBRACK NUM • RBRACK SEMICOLON

    RBRACK  shift, and go to state 24


State 21

   15 param: type_specifier ID •
   16      | type_specifier ID • LBRACK RBRACK

    LBRACK  shift, and go to state 25

    $default  reduce using rule 15 (param)


State 22

   10 fun_declaration: type_specifier ID LPAREN params RPAREN • compound_decl

    LBRACE  shift, and go to state 26

    compound_decl  go to state 27


State 23

   13 param_list: param_list COMMA • param

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    type_specifier  go to state 16
    param           go to state 28


State 24

    7 var_declaration: type_specifier ID LBRACK NUM RBRACK • SEMICOLON

    SEMICOLON  shift, and go to state 29


State 25

   16 param: type_specifier ID LBRACK • RBRACK

    RBRACK  shift, and go to state 30


State 26

   17 compound_decl: LBRACE • local_declarations statement_list RBRACE

    $default  reduce using rule 19 (local_declarations)

    local_declarations  go to state 31


State 27

   10 fun_declaration: type_specifier ID LPAREN params RPAREN compound_decl •

    $default  reduce using rule 10 (fun_declaration)


State 28

   13 param_list: param_list COMMA param •

    $default  reduce using rule 13 (param_list)


State 29

    7 var_declaration: type_specifier ID LBRACK NUM RBRACK SEMICOLON •

    $default  reduce using rule 7 (var_declaration)


State 30

   16 param: type_specifier ID LBRACK RBRACK •

    $default  reduce using rule 16 (param)


State 31

   17 compound_decl: LBRACE local_declarations • statement_list RBRACE
   18 local_declarations: local_declarations • var_declaration

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    $default  reduce using rule 21 (statement_list)

    var_declaration  go to state 32
    type_specifier   go to state 33
    statement_list   go to state 34


State 32

   18 local_declarations: local_declarations var_declaration •

    $default  reduce using rule 18 (local_declarations)


State 33

    6 var_declaration: type_specifier • ID SEMICOLON
    7                | type_specifier • ID LBRACK NUM RBRACK SEMICOLON

    ID  shift, and go to state 35


State 34

   17 compound_decl: LBRACE local_declarations statement_list • RBRACE
   20 statement_list: statement_list • statement

    IF      shift, and go to state 36
    WHILE   shift, and go to state 37
    RETURN  shift, and go to state 38
    NUM     shift, and go to state 39
    ID      shift, and go to state 40
    LPAREN  shift, and go to state 41
    LBRACE  shift, and go to state 26
    RBRACE  shift, and go to state 42

    compound_decl      go to state 43
    statement          go to state 44
    matched_stmt       go to state 45
    unmatched_stmt     go to state 46
    other_stmt         go to state 47
    expression_decl    go to state 48
    iteration_decl     go to state 49
    return_decl        go to state 50
    expression         go to state 51
    var                go to state 52
    simple_expression  go to state 53
    sum_expression     go to state 54
    term               go to state 55
    factor             go to state 56
    call               go to state 57


State 35

    6 var_declaration: type_specifier ID • SEMICOLON
    7                | type_specifier ID • LBRACK NUM RBRACK SEMICOLON

    SEMICOLON  shift, and go to state 12
    LBRACK     shift, and go to state 14


State 36

   24 matched_stmt: IF • LPAREN expression RPAREN matched_stmt ELSE matched_stmt
   26 unmatched_stmt: IF • LPAREN expression RPAREN statement
   27               | IF • LPAREN expression RPAREN matched_stmt ELSE unmatched_stmt

    LPAREN  shift, and go to state 58


State 37

   33 iteration_decl: WHILE • LPAREN expression RPAREN statement

    LPAREN  shift, and go to state 59


State 38

   34 return_decl: RETURN • SEMICOLON
   35            | RETURN • expression SEMICOLON

    NUM        shift, and go to state 39
    ID         shift, and go to state 40
    SEMICOLON  shift, and go to state 60
    LPAREN     shift, and go to state 41

    expression         go to state 61
    var                go to state 52
    simple_expression  go to state 53
    sum_expression     go to state 54
    term               go to state 55
    factor             go to state 56
    call               go to state 57


State 39

   59 factor: NUM •

    $default  reduce using rule 59 (factor)


State 40

   38 var: ID •
   39    | ID • LBRACK expression RBRACK
   60 call: ID • LPAREN args RPAREN

    LPAREN  shift, and go to state 62
    LBRACK  shift, and go to state 63

    $default  reduce using rule 38 (var)


State 41

   56 factor: LPAREN • expression RPAREN

    NUM     shift, and go to state 39
    ID      shift, and go to state 40
    LPAREN  shift, and go to state 41

    expression         go to state 64
    var                go to state 52
    simple_expression  go to state 53
    sum_expression     go to state 54
    term               go to state 55
    factor             go to state 56
    call               go to state 57


State 42

   17 compound_decl: LBRACE local_declarations statement_list RBRACE •

    $default  reduce using rule 17 (compound_decl)


State 43

   29 other_stmt: compound_decl •

    $default  reduce using rule 29 (other_stmt)


State 44

   20 statement_list: statement_list statement •

    $default  reduce using rule 20 (statement_list)


State 45

   22 statement: matched_stmt •

    $default  reduce using rule 22 (statement)


State 46

   23 statement: unmatched_stmt •

    $default  reduce using rule 23 (statement)


State 47

   25 matched_stmt: other_stmt •

    $default  reduce using rule 25 (matched_stmt)


State 48

   28 other_stmt: expression_decl •

    $default  reduce using rule 28 (other_stmt)


State 49

   30 other_stmt: iteration_decl •

    $default  reduce using rule 30 (other_stmt)


State 50

   31 other_stmt: return_decl •

    $default  reduce using rule 31 (other_stmt)


State 51

   32 expression_decl: expression • SEMICOLON

    SEMICOLON  shift, and go to state 65


State 52

   36 expression: var • ASSIGN expression
   57 factor: var •

    ASSIGN  shift, and go to state 66

    $default  reduce using rule 57 (factor)


State 53

   37 expression: simple_expression •

    $default  reduce using rule 37 (expression)


State 54

   40 simple_expression: sum_expression • relational sum_expression
   41                  | sum_expression •
   48 sum_expression: sum_expression • sum term

    EQ     shift, and go to state 67
    NEQ    shift, and go to state 68
    LT     shift, and go to state 69
    LTE    shift, and go to state 70
    GT     shift, and go to state 71
    GTE    shift, and go to state 72
    PLUS   shift, and go to state 73
    MINUS  shift, and go to state 74

    $default  reduce using rule 41 (simple_expression)

    relational  go to state 75
    sum         go to state 76


State 55

   49 sum_expression: term •
   52 term: term • mult factor

    TIMES  shift, and go to state 77
    DIV    shift, and go to state 78

    $default  reduce using rule 49 (sum_expression)

    mult  go to state 79


State 56

   53 term: factor •

    $default  reduce using rule 53 (term)


State 57

   58 factor: call •

    $default  reduce using rule 58 (factor)


State 58

   24 matched_stmt: IF LPAREN • expression RPAREN matched_stmt ELSE matched_stmt
   26 unmatched_stmt: IF LPAREN • expression RPAREN statement
   27               | IF LPAREN • expression RPAREN matched_stmt ELSE unmatched_stmt

    NUM     shift, and go to state 39
    ID      shift, and go to state 40
    LPAREN  shift, and go to state 41

    expression         go to state 80
    var                go to state 52
    simple_expression  go to state 53
    sum_expression     go to state 54
    term               go to state 55
    factor             go to state 56
    call               go to state 57


State 59

   33 iteration_decl: WHILE LPAREN • expression RPAREN statement

    NUM     shift, and go to state 39
    ID      shift, and go to state 40
    LPAREN  shift, and go to state 41

    expression         go to state 81
    var                go to state 52
    simple_expression  go to state 53
    sum_expression     go to state 54
    term               go to state 55
    factor             go to state 56
    call               go to state 57


State 60

   34 return_decl: RETURN SEMICOLON •

    $default  reduce using rule 34 (return_decl)


State 61

   35 return_decl: RETURN expression • SEMICOLON

    SEMICOLON  shift, and go to state 82


State 62

   60 call: ID LPAREN • args RPAREN

    INT     shift, and go to state 1
    VOID    shift, and go to state 2
    NUM     shift, and go to state 39
    ID      shift, and go to state 40
    LPAREN  shift, and go to state 41

    $default  reduce using rule 62 (args)

    type_specifier     go to state 16
    param              go to state 83
    expression         go to state 84
    var                go to state 52
    simple_expression  go to state 53
    sum_expression     go to state 54
    term               go to state 55
    factor             go to state 56
    call               go to state 57
    args               go to state 85
    arg_list           go to state 86


State 63

   39 var: ID LBRACK • expression RBRACK

    NUM     shift, and go to state 39
    ID      shift, and go to state 40
    LPAREN  shift, and go to state 41

    expression         go to state 87
    var                go to state 52
    simple_expression  go to state 53
    sum_expression     go to state 54
    term               go to state 55
    factor             go to state 56
    call               go to state 57


State 64

   56 factor: LPAREN expression • RPAREN

    RPAREN  shift, and go to state 88


State 65

   32 expression_decl: expression SEMICOLON •

    $default  reduce using rule 32 (expression_decl)


State 66

   36 expression: var ASSIGN • expression

    NUM     shift, and go to state 39
    ID      shift, and go to state 40
    LPAREN  shift, and go to state 41

    expression         go to state 89
    var                go to state 52
    simple_expression  go to state 53
    sum_expression     go to state 54
    term               go to state 55
    factor             go to state 56
    call               go to state 57


State 67

   46 relational: EQ •

    $default  reduce using rule 46 (relational)


State 68

   47 relational: NEQ •

    $default  reduce using rule 47 (relational)


State 69

   42 relational: LT •

    $default  reduce using rule 42 (relational)


State 70

   43 relational: LTE •

    $default  reduce using rule 43 (relational)


State 71

   44 relational: GT •

    $default  reduce using rule 44 (relational)


State 72

   45 relational: GTE •

    $default  reduce using rule 45 (relational)


State 73

   50 sum: PLUS •

    $default  reduce using rule 50 (sum)


State 74

   51 sum: MINUS •

    $default  reduce using rule 51 (sum)


State 75

   40 simple_expression: sum_expression relational • sum_expression

    NUM     shift, and go to state 39
    ID      shift, and go to state 40
    LPAREN  shift, and go to state 41

    var             go to state 90
    sum_expression  go to state 91
    term            go to state 55
    factor          go to state 56
    call            go to state 57


State 76

   48 sum_expression: sum_expression sum • term

    NUM     shift, and go to state 39
    ID      shift, and go to state 40
    LPAREN  shift, and go to state 41

    var     go to state 90
    term    go to state 92
    factor  go to state 56
    call    go to state 57


State 77

   54 mult: TIMES •

    $default  reduce using rule 54 (mult)


State 78

   55 mult: DIV •

    $default  reduce using rule 55 (mult)


State 79

   52 term: term mult • factor

    NUM     shift, and go to state 39
    ID      shift, and go to state 40
    LPAREN  shift, and go to state 41

    var     go to state 90
    factor  go to state 93
    call    go to state 57


State 80

   24 matched_stmt: IF LPAREN expression • RPAREN matched_stmt ELSE matched_stmt
   26 unmatched_stmt: IF LPAREN expression • RPAREN statement
   27               | IF LPAREN expression • RPAREN matched_stmt ELSE unmatched_stmt

    RPAREN  shift, and go to state 94


State 81

   33 iteration_decl: WHILE LPAREN expression • RPAREN statement

    RPAREN  shift, and go to state 95


State 82

   35 return_decl: RETURN expression SEMICOLON •

    $default  reduce using rule 35 (return_decl)


State 83

   65 arg_list: param •

    $default  reduce using rule 65 (arg_list)


State 84

   64 arg_list: expression •

    $default  reduce using rule 64 (arg_list)


State 85

   60 call: ID LPAREN args • RPAREN

    RPAREN  shift, and go to state 96


State 86

   61 args: arg_list •
   63 arg_list: arg_list • COMMA expression

    COMMA  shift, and go to state 97

    $default  reduce using rule 61 (args)


State 87

   39 var: ID LBRACK expression • RBRACK

    RBRACK  shift, and go to state 98


State 88

   56 factor: LPAREN expression RPAREN •

    $default  reduce using rule 56 (factor)


State 89

   36 expression: var ASSIGN expression •

    $default  reduce using rule 36 (expression)


State 90

   57 factor: var •

    $default  reduce using rule 57 (factor)


State 91

   40 simple_expression: sum_expression relational sum_expression •
   48 sum_expression: sum_expression • sum term

    PLUS   shift, and go to state 73
    MINUS  shift, and go to state 74

    $default  reduce using rule 40 (simple_expression)

    sum  go to state 76


State 92

   48 sum_expression: sum_expression sum term •
   52 term: term • mult factor

    TIMES  shift, and go to state 77
    DIV    shift, and go to state 78

    $default  reduce using rule 48 (sum_expression)

    mult  go to state 79


State 93

   52 term: term mult factor •

    $default  reduce using rule 52 (term)


State 94

   24 matched_stmt: IF LPAREN expression RPAREN • matched_stmt ELSE matched_stmt
   26 unmatched_stmt: IF LPAREN expression RPAREN • statement
   27               | IF LPAREN expression RPAREN • matched_stmt ELSE unmatched_stmt

    IF      shift, and go to state 36
    WHILE   shift, and go to state 37
    RETURN  shift, and go to state 38
    NUM     shift, and go to state 39
    ID      shift, and go to state 40
    LPAREN  shift, and go to state 41
    LBRACE  shift, and go to state 26

    compound_decl      go to state 43
    statement          go to state 99
    matched_stmt       go to state 100
    unmatched_stmt     go to state 46
    other_stmt         go to state 47
    expression_decl    go to state 48
    iteration_decl     go to state 49
    return_decl        go to state 50
    expression         go to state 51
    var                go to state 52
    simple_expression  go to state 53
    sum_expression     go to state 54
    term               go to state 55
    factor             go to state 56
    call               go to state 57


State 95

   33 iteration_decl: WHILE LPAREN expression RPAREN • statement

    IF      shift, and go to state 36
    WHILE   shift, and go to state 37
    RETURN  shift, and go to state 38
    NUM     shift, and go to state 39
    ID      shift, and go to state 40
    LPAREN  shift, and go to state 41
    LBRACE  shift, and go to state 26

    compound_decl      go to state 43
    statement          go to state 101
    matched_stmt       go to state 45
    unmatched_stmt     go to state 46
    other_stmt         go to state 47
    expression_decl    go to state 48
    iteration_decl     go to state 49
    return_decl        go to state 50
    expression         go to state 51
    var                go to state 52
    simple_expression  go to state 53
    sum_expression     go to state 54
    term               go to state 55
    factor             go to state 56
    call               go to state 57


State 96

   60 call: ID LPAREN args RPAREN •

    $default  reduce using rule 60 (call)


State 97

   63 arg_list: arg_list COMMA • expression

    NUM     shift, and go to state 39
    ID      shift, and go to state 40
    LPAREN  shift, and go to state 41

    expression         go to state 102
    var                go to state 52
    simple_expression  go to state 53
    sum_expression     go to state 54
    term               go to state 55
    factor             go to state 56
    call               go to state 57


State 98

   39 var: ID LBRACK expression RBRACK •

    $default  reduce using rule 39 (var)


State 99

   26 unmatched_stmt: IF LPAREN expression RPAREN statement •

    $default  reduce using rule 26 (unmatched_stmt)


State 100

   22 statement: matched_stmt •
   24 matched_stmt: IF LPAREN expression RPAREN matched_stmt • ELSE matched_stmt
   27 unmatched_stmt: IF LPAREN expression RPAREN matched_stmt • ELSE unmatched_stmt

    ELSE  shift, and go to state 103

    ELSE      [reduce using rule 22 (statement)]
    $default  reduce using rule 22 (statement)

    shift/reduce conflict on token ELSE:
       22 statement: matched_stmt •
       24 matched_stmt: IF LPAREN expression RPAREN matched_stmt • ELSE matched_stmt
      Example: IF LPAREN expression RPAREN WHILE LPAREN expression RPAREN IF LPAREN expression RPAREN matched_stmt • ELSE matched_stmt
      Shift derivation
        statement
        ↳ 23: unmatched_stmt
              ↳ 26: IF LPAREN expression RPAREN statement
                                                ↳ 22: matched_stmt
                                                      ↳ 25: other_stmt
                                                            ↳ 30: iteration_decl
                                                                  ↳ 33: WHILE LPAREN expression RPAREN statement
                                                                                                       ↳ 22: matched_stmt
                                                                                                             ↳ 24: IF LPAREN expression RPAREN matched_stmt • ELSE matched_stmt
      Reduce derivation
        statement
        ↳ 22: matched_stmt
              ↳ 24: IF LPAREN expression RPAREN matched_stmt                                                                                                  ELSE matched_stmt
                                                ↳ 25: other_stmt
                                                      ↳ 30: iteration_decl
                                                            ↳ 33: WHILE LPAREN expression RPAREN statement
                                                                                                 ↳ 23: unmatched_stmt
                                                                                                       ↳ 26: IF LPAREN expression RPAREN statement
                                                                                                                                         ↳ 22: matched_stmt •

    shift/reduce conflict on token ELSE:
       22 statement: matched_stmt •
       27 unmatched_stmt: IF LPAREN expression RPAREN matched_stmt • ELSE unmatched_stmt
      Example: IF LPAREN expression RPAREN WHILE LPAREN expression RPAREN IF LPAREN expression RPAREN matched_stmt • ELSE unmatched_stmt
      Shift derivation
        unmatched_stmt
        ↳ 26: IF LPAREN expression RPAREN statement
                                          ↳ 22: matched_stmt
                                                ↳ 25: other_stmt
                                                      ↳ 30: iteration_decl
                                                            ↳ 33: WHILE LPAREN expression RPAREN statement
                                                                                                 ↳ 23: unmatched_stmt
                                                                                                       ↳ 27: IF LPAREN expression RPAREN matched_stmt • ELSE unmatched_stmt
      Reduce derivation
        unmatched_stmt
        ↳ 27: IF LPAREN expression RPAREN matched_stmt                                                                                                  ELSE unmatched_stmt
                                          ↳ 25: other_stmt
                                                ↳ 30: iteration_decl
                                                      ↳ 33: WHILE LPAREN expression RPAREN statement
                                                                                           ↳ 23: unmatched_stmt
                                                                                                 ↳ 26: IF LPAREN expression RPAREN statement
                                                                                                                                   ↳ 22: matched_stmt •



State 101

   33 iteration_decl: WHILE LPAREN expression RPAREN statement •

    $default  reduce using rule 33 (iteration_decl)


State 102

   63 arg_list: arg_list COMMA expression •

    $default  reduce using rule 63 (arg_list)


State 103

   24 matched_stmt: IF LPAREN expression RPAREN matched_stmt ELSE • matched_stmt
   27 unmatched_stmt: IF LPAREN expression RPAREN matched_stmt ELSE • unmatched_stmt

    IF      shift, and go to state 36
    WHILE   shift, and go to state 37
    RETURN  shift, and go to state 38
    NUM     shift, and go to state 39
    ID      shift, and go to state 40
    LPAREN  shift, and go to state 41
    LBRACE  shift, and go to state 26

    compound_decl      go to state 43
    matched_stmt       go to state 104
    unmatched_stmt     go to state 105
    other_stmt         go to state 47
    expression_decl    go to state 48
    iteration_decl     go to state 49
    return_decl        go to state 50
    expression         go to state 51
    var                go to state 52
    simple_expression  go to state 53
    sum_expression     go to state 54
    term               go to state 55
    factor             go to state 56
    call               go to state 57


State 104

   24 matched_stmt: IF LPAREN expression RPAREN matched_stmt ELSE matched_stmt •

    $default  reduce using rule 24 (matched_stmt)


State 105

   27 unmatched_stmt: IF LPAREN expression RPAREN matched_stmt ELSE unmatched_stmt •

    $default  reduce using rule 27 (unmatched_stmt)
