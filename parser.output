State 28 conflicts: 2 shift/reduce


Grammar

    0 $accept: program $end

    1 program: declaration_list

    2 declaration_list: declaration_list declaration
    3                 | declaration

    4 declaration: var_declaration
    5            | fun_declaration

    6 var_declaration: type_specifier ID SEMICOLON
    7                | type_specifier ID LBRACK NUM RBRACK SEMICOLON

    8 type_specifier: INT
    9               | VOID

   10 $@1: ε

   11 fun_declaration: type_specifier ID LPAREN $@1 params RPAREN compound_stmt

   12 params: param_list
   13       | VOID

   14 param_list: param_list COMMA param
   15           | param

   16 param: type_specifier ID
   17      | type_specifier ID LBRACK RBRACK

   18 compound_stmt: LBRACE local_declarations statement_list RBRACE

   19 local_declarations: local_declarations var_declaration
   20                   | var_declaration
   21                   | ε

   22 statement_list: statement_list statement
   23               | statement

   24 statement: expression_stmt
   25          | compound_stmt
   26          | selection_stmt
   27          | iteration_stmt
   28          | return_stmt

   29 expression_stmt: expression SEMICOLON
   30                | SEMICOLON

   31 selection_stmt: IF LPAREN expression RPAREN statement
   32               | IF LPAREN expression RPAREN statement ELSE statement

   33 iteration_stmt: WHILE LPAREN expression RPAREN statement

   34 return_stmt: RETURN SEMICOLON
   35            | RETURN expression SEMICOLON

   36 expression: var ASSIGN expression
   37           | simple_expression

   38 var: ID
   39    | ID LBRACK expression RBRACK

   40 simple_expression: additive_expression relop additive_expression
   41                  | additive_expression

   42 relop: LTE
   43      | LT
   44      | GT
   45      | GTE
   46      | EQ
   47      | NEQ

   48 additive_expression: additive_expression addop term
   49                    | term

   50 addop: PLUS
   51      | MINUS

   52 term: term mulop factor
   53     | factor

   54 mulop: TIMES
   55      | DIV
   56      | MOD

   57 factor: LPAREN expression RPAREN
   58       | var
   59       | call
   60       | NUM

   61 call: ID LPAREN args RPAREN

   62 args: arg_list
   63     | ε

   64 arg_list: arg_list COMMA expression
   65         | expression


Terminals, with rules where they appear

    $end (0) 0
    IF (1) 31 32
    WHILE (2) 33
    RETURN (3) 34 35
    INT (4) 8
    VOID (5) 9 13
    EQ (8) 46
    NEQ (9) 47
    LT (10) 43
    LTE (11) 42
    GT (12) 44
    GTE (13) 45
    PLUS (14) 50
    MINUS (15) 51
    TIMES (16) 54
    DIV (17) 55
    ASSIGN (18) 36
    SEMICOLON (19) 6 7 29 30 34 35
    COMMA (20) 14 64
    LPAREN (21) 11 31 32 33 57 61
    RPAREN (22) 11 31 32 33 57 61
    LBRACE (23) 18
    RBRACE (24) 18
    LBRACK (25) 7 17 39
    RBRACK (26) 7 17 39
    MOD (28) 56
    error (256)
    ID <sval> (258) 6 7 11 16 17 38 39 61
    NUM <ival> (259) 7 60
    LOWER_THAN_ELSE (260)
    ELSE (261) 32


Nonterminals, with rules where they appear

    $accept (32)
        on left: 0
    program <ast> (33)
        on left: 1
        on right: 0
    declaration_list <ast> (34)
        on left: 2 3
        on right: 1 2
    declaration <ast> (35)
        on left: 4 5
        on right: 2 3
    var_declaration <ast> (36)
        on left: 6 7
        on right: 4 19 20
    type_specifier <ival> (37)
        on left: 8 9
        on right: 6 7 11 16 17
    fun_declaration <ast> (38)
        on left: 11
        on right: 5
    $@1 (39)
        on left: 10
        on right: 11
    params <ast> (40)
        on left: 12 13
        on right: 11
    param_list <ast> (41)
        on left: 14 15
        on right: 12 14
    param <ast> (42)
        on left: 16 17
        on right: 14 15
    compound_stmt <ast> (43)
        on left: 18
        on right: 11 25
    local_declarations <ast> (44)
        on left: 19 20 21
        on right: 18 19
    statement_list <ast> (45)
        on left: 22 23
        on right: 18 22
    statement <ast> (46)
        on left: 24 25 26 27 28
        on right: 22 23 31 32 33
    expression_stmt <ast> (47)
        on left: 29 30
        on right: 24
    selection_stmt <ast> (48)
        on left: 31 32
        on right: 26
    iteration_stmt <ast> (49)
        on left: 33
        on right: 27
    return_stmt <ast> (50)
        on left: 34 35
        on right: 28
    expression <ast> (51)
        on left: 36 37
        on right: 29 31 32 33 35 36 39 57 64 65
    var <ast> (52)
        on left: 38 39
        on right: 36 58
    simple_expression <ast> (53)
        on left: 40 41
        on right: 37
    relop <ast> (54)
        on left: 42 43 44 45 46 47
        on right: 40
    additive_expression <ast> (55)
        on left: 48 49
        on right: 40 41 48
    addop <ast> (56)
        on left: 50 51
        on right: 48
    term <ast> (57)
        on left: 52 53
        on right: 48 49 52
    mulop <ast> (58)
        on left: 54 55 56
        on right: 52
    factor <ast> (59)
        on left: 57 58 59 60
        on right: 52 53
    call <ast> (60)
        on left: 61
        on right: 59
    args <ast> (61)
        on left: 62 63
        on right: 61
    arg_list <ast> (62)
        on left: 64 65
        on right: 62 64


State 0

    0 $accept: • program $end

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    program           go to state 3
    declaration_list  go to state 4
    declaration       go to state 5
    var_declaration   go to state 6
    type_specifier    go to state 7
    fun_declaration   go to state 8


State 1

    8 type_specifier: INT •

    $default  reduce using rule 8 (type_specifier)


State 2

    9 type_specifier: VOID •

    $default  reduce using rule 9 (type_specifier)


State 3

    0 $accept: program • $end

    $end  shift, and go to state 9


State 4

    1 program: declaration_list •
    2 declaration_list: declaration_list • declaration

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    $default  reduce using rule 1 (program)

    declaration      go to state 10
    var_declaration  go to state 6
    type_specifier   go to state 7
    fun_declaration  go to state 8


State 5

    3 declaration_list: declaration •

    $default  reduce using rule 3 (declaration_list)


State 6

    4 declaration: var_declaration •

    $default  reduce using rule 4 (declaration)


State 7

    6 var_declaration: type_specifier • ID SEMICOLON
    7                | type_specifier • ID LBRACK NUM RBRACK SEMICOLON
   11 fun_declaration: type_specifier • ID LPAREN $@1 params RPAREN compound_stmt

    ID  shift, and go to state 11


State 8

    5 declaration: fun_declaration •

    $default  reduce using rule 5 (declaration)


State 9

    0 $accept: program $end •

    $default  accept


State 10

    2 declaration_list: declaration_list declaration •

    $default  reduce using rule 2 (declaration_list)


State 11

    6 var_declaration: type_specifier ID • SEMICOLON
    7                | type_specifier ID • LBRACK NUM RBRACK SEMICOLON
   11 fun_declaration: type_specifier ID • LPAREN $@1 params RPAREN compound_stmt

    SEMICOLON  shift, and go to state 12
    LPAREN     shift, and go to state 13
    LBRACK     shift, and go to state 14


State 12

    6 var_declaration: type_specifier ID SEMICOLON •

    $default  reduce using rule 6 (var_declaration)


State 13

   11 fun_declaration: type_specifier ID LPAREN • $@1 params RPAREN compound_stmt

    $default  reduce using rule 10 ($@1)

    $@1  go to state 15


State 14

    7 var_declaration: type_specifier ID LBRACK • NUM RBRACK SEMICOLON

    NUM  shift, and go to state 16


State 15

   11 fun_declaration: type_specifier ID LPAREN $@1 • params RPAREN compound_stmt

    INT   shift, and go to state 1
    VOID  shift, and go to state 17

    type_specifier  go to state 18
    params          go to state 19
    param_list      go to state 20
    param           go to state 21


State 16

    7 var_declaration: type_specifier ID LBRACK NUM • RBRACK SEMICOLON

    RBRACK  shift, and go to state 22


State 17

    9 type_specifier: VOID •
   13 params: VOID •

    RPAREN    reduce using rule 13 (params)
    $default  reduce using rule 9 (type_specifier)


State 18

   16 param: type_specifier • ID
   17      | type_specifier • ID LBRACK RBRACK

    ID  shift, and go to state 23


State 19

   11 fun_declaration: type_specifier ID LPAREN $@1 params • RPAREN compound_stmt

    RPAREN  shift, and go to state 24


State 20

   12 params: param_list •
   14 param_list: param_list • COMMA param

    COMMA  shift, and go to state 25

    $default  reduce using rule 12 (params)


State 21

   15 param_list: param •

    $default  reduce using rule 15 (param_list)


State 22

    7 var_declaration: type_specifier ID LBRACK NUM RBRACK • SEMICOLON

    SEMICOLON  shift, and go to state 26


State 23

   16 param: type_specifier ID •
   17      | type_specifier ID • LBRACK RBRACK

    LBRACK  shift, and go to state 27

    $default  reduce using rule 16 (param)


State 24

   11 fun_declaration: type_specifier ID LPAREN $@1 params RPAREN • compound_stmt

    LBRACE  shift, and go to state 28

    compound_stmt  go to state 29


State 25

   14 param_list: param_list COMMA • param

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    type_specifier  go to state 18
    param           go to state 30


State 26

    7 var_declaration: type_specifier ID LBRACK NUM RBRACK SEMICOLON •

    $default  reduce using rule 7 (var_declaration)


State 27

   17 param: type_specifier ID LBRACK • RBRACK

    RBRACK  shift, and go to state 31


State 28

   18 compound_stmt: LBRACE • local_declarations statement_list RBRACE

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    INT       [reduce using rule 21 (local_declarations)]
    VOID      [reduce using rule 21 (local_declarations)]
    $default  reduce using rule 21 (local_declarations)

    var_declaration     go to state 32
    type_specifier      go to state 33
    local_declarations  go to state 34

    shift/reduce conflict on token INT:
       21 local_declarations: ε •
        8 type_specifier: • INT
      Example: • INT ID SEMICOLON
      Shift derivation
        local_declarations
        ↳ 20: var_declaration
              ↳ 6: type_specifier ID SEMICOLON
                   ↳ 8: • INT
      Reduce derivation
        local_declarations
        ↳ 19: local_declarations var_declaration
              ↳ 21: ε •          ↳ 6: type_specifier ID SEMICOLON
                                      ↳ 8: INT

    shift/reduce conflict on token VOID:
       21 local_declarations: ε •
        9 type_specifier: • VOID
      Example: • VOID ID SEMICOLON
      Shift derivation
        local_declarations
        ↳ 20: var_declaration
              ↳ 6: type_specifier ID SEMICOLON
                   ↳ 9: • VOID
      Reduce derivation
        local_declarations
        ↳ 19: local_declarations var_declaration
              ↳ 21: ε •          ↳ 6: type_specifier ID SEMICOLON
                                      ↳ 9: VOID



State 29

   11 fun_declaration: type_specifier ID LPAREN $@1 params RPAREN compound_stmt •

    $default  reduce using rule 11 (fun_declaration)


State 30

   14 param_list: param_list COMMA param •

    $default  reduce using rule 14 (param_list)


State 31

   17 param: type_specifier ID LBRACK RBRACK •

    $default  reduce using rule 17 (param)


State 32

   20 local_declarations: var_declaration •

    $default  reduce using rule 20 (local_declarations)


State 33

    6 var_declaration: type_specifier • ID SEMICOLON
    7                | type_specifier • ID LBRACK NUM RBRACK SEMICOLON

    ID  shift, and go to state 35


State 34

   18 compound_stmt: LBRACE local_declarations • statement_list RBRACE
   19 local_declarations: local_declarations • var_declaration

    ID         shift, and go to state 36
    NUM        shift, and go to state 37
    IF         shift, and go to state 38
    WHILE      shift, and go to state 39
    RETURN     shift, and go to state 40
    INT        shift, and go to state 1
    VOID       shift, and go to state 2
    SEMICOLON  shift, and go to state 41
    LPAREN     shift, and go to state 42
    LBRACE     shift, and go to state 28

    var_declaration      go to state 43
    type_specifier       go to state 33
    compound_stmt        go to state 44
    statement_list       go to state 45
    statement            go to state 46
    expression_stmt      go to state 47
    selection_stmt       go to state 48
    iteration_stmt       go to state 49
    return_stmt          go to state 50
    expression           go to state 51
    var                  go to state 52
    simple_expression    go to state 53
    additive_expression  go to state 54
    term                 go to state 55
    factor               go to state 56
    call                 go to state 57


State 35

    6 var_declaration: type_specifier ID • SEMICOLON
    7                | type_specifier ID • LBRACK NUM RBRACK SEMICOLON

    SEMICOLON  shift, and go to state 12
    LBRACK     shift, and go to state 14


State 36

   38 var: ID •
   39    | ID • LBRACK expression RBRACK
   61 call: ID • LPAREN args RPAREN

    LPAREN  shift, and go to state 58
    LBRACK  shift, and go to state 59

    $default  reduce using rule 38 (var)


State 37

   60 factor: NUM •

    $default  reduce using rule 60 (factor)


State 38

   31 selection_stmt: IF • LPAREN expression RPAREN statement
   32               | IF • LPAREN expression RPAREN statement ELSE statement

    LPAREN  shift, and go to state 60


State 39

   33 iteration_stmt: WHILE • LPAREN expression RPAREN statement

    LPAREN  shift, and go to state 61


State 40

   34 return_stmt: RETURN • SEMICOLON
   35            | RETURN • expression SEMICOLON

    ID         shift, and go to state 36
    NUM        shift, and go to state 37
    SEMICOLON  shift, and go to state 62
    LPAREN     shift, and go to state 42

    expression           go to state 63
    var                  go to state 52
    simple_expression    go to state 53
    additive_expression  go to state 54
    term                 go to state 55
    factor               go to state 56
    call                 go to state 57


State 41

   30 expression_stmt: SEMICOLON •

    $default  reduce using rule 30 (expression_stmt)


State 42

   57 factor: LPAREN • expression RPAREN

    ID      shift, and go to state 36
    NUM     shift, and go to state 37
    LPAREN  shift, and go to state 42

    expression           go to state 64
    var                  go to state 52
    simple_expression    go to state 53
    additive_expression  go to state 54
    term                 go to state 55
    factor               go to state 56
    call                 go to state 57


State 43

   19 local_declarations: local_declarations var_declaration •

    $default  reduce using rule 19 (local_declarations)


State 44

   25 statement: compound_stmt •

    $default  reduce using rule 25 (statement)


State 45

   18 compound_stmt: LBRACE local_declarations statement_list • RBRACE
   22 statement_list: statement_list • statement

    ID         shift, and go to state 36
    NUM        shift, and go to state 37
    IF         shift, and go to state 38
    WHILE      shift, and go to state 39
    RETURN     shift, and go to state 40
    SEMICOLON  shift, and go to state 41
    LPAREN     shift, and go to state 42
    LBRACE     shift, and go to state 28
    RBRACE     shift, and go to state 65

    compound_stmt        go to state 44
    statement            go to state 66
    expression_stmt      go to state 47
    selection_stmt       go to state 48
    iteration_stmt       go to state 49
    return_stmt          go to state 50
    expression           go to state 51
    var                  go to state 52
    simple_expression    go to state 53
    additive_expression  go to state 54
    term                 go to state 55
    factor               go to state 56
    call                 go to state 57


State 46

   23 statement_list: statement •

    $default  reduce using rule 23 (statement_list)


State 47

   24 statement: expression_stmt •

    $default  reduce using rule 24 (statement)


State 48

   26 statement: selection_stmt •

    $default  reduce using rule 26 (statement)


State 49

   27 statement: iteration_stmt •

    $default  reduce using rule 27 (statement)


State 50

   28 statement: return_stmt •

    $default  reduce using rule 28 (statement)


State 51

   29 expression_stmt: expression • SEMICOLON

    SEMICOLON  shift, and go to state 67


State 52

   36 expression: var • ASSIGN expression
   58 factor: var •

    ASSIGN  shift, and go to state 68

    $default  reduce using rule 58 (factor)


State 53

   37 expression: simple_expression •

    $default  reduce using rule 37 (expression)


State 54

   40 simple_expression: additive_expression • relop additive_expression
   41                  | additive_expression •
   48 additive_expression: additive_expression • addop term

    EQ     shift, and go to state 69
    NEQ    shift, and go to state 70
    LT     shift, and go to state 71
    LTE    shift, and go to state 72
    GT     shift, and go to state 73
    GTE    shift, and go to state 74
    PLUS   shift, and go to state 75
    MINUS  shift, and go to state 76

    $default  reduce using rule 41 (simple_expression)

    relop  go to state 77
    addop  go to state 78


State 55

   49 additive_expression: term •
   52 term: term • mulop factor

    TIMES  shift, and go to state 79
    DIV    shift, and go to state 80
    MOD    shift, and go to state 81

    $default  reduce using rule 49 (additive_expression)

    mulop  go to state 82


State 56

   53 term: factor •

    $default  reduce using rule 53 (term)


State 57

   59 factor: call •

    $default  reduce using rule 59 (factor)


State 58

   61 call: ID LPAREN • args RPAREN

    ID      shift, and go to state 36
    NUM     shift, and go to state 37
    LPAREN  shift, and go to state 42

    $default  reduce using rule 63 (args)

    expression           go to state 83
    var                  go to state 52
    simple_expression    go to state 53
    additive_expression  go to state 54
    term                 go to state 55
    factor               go to state 56
    call                 go to state 57
    args                 go to state 84
    arg_list             go to state 85


State 59

   39 var: ID LBRACK • expression RBRACK

    ID      shift, and go to state 36
    NUM     shift, and go to state 37
    LPAREN  shift, and go to state 42

    expression           go to state 86
    var                  go to state 52
    simple_expression    go to state 53
    additive_expression  go to state 54
    term                 go to state 55
    factor               go to state 56
    call                 go to state 57


State 60

   31 selection_stmt: IF LPAREN • expression RPAREN statement
   32               | IF LPAREN • expression RPAREN statement ELSE statement

    ID      shift, and go to state 36
    NUM     shift, and go to state 37
    LPAREN  shift, and go to state 42

    expression           go to state 87
    var                  go to state 52
    simple_expression    go to state 53
    additive_expression  go to state 54
    term                 go to state 55
    factor               go to state 56
    call                 go to state 57


State 61

   33 iteration_stmt: WHILE LPAREN • expression RPAREN statement

    ID      shift, and go to state 36
    NUM     shift, and go to state 37
    LPAREN  shift, and go to state 42

    expression           go to state 88
    var                  go to state 52
    simple_expression    go to state 53
    additive_expression  go to state 54
    term                 go to state 55
    factor               go to state 56
    call                 go to state 57


State 62

   34 return_stmt: RETURN SEMICOLON •

    $default  reduce using rule 34 (return_stmt)


State 63

   35 return_stmt: RETURN expression • SEMICOLON

    SEMICOLON  shift, and go to state 89


State 64

   57 factor: LPAREN expression • RPAREN

    RPAREN  shift, and go to state 90


State 65

   18 compound_stmt: LBRACE local_declarations statement_list RBRACE •

    $default  reduce using rule 18 (compound_stmt)


State 66

   22 statement_list: statement_list statement •

    $default  reduce using rule 22 (statement_list)


State 67

   29 expression_stmt: expression SEMICOLON •

    $default  reduce using rule 29 (expression_stmt)


State 68

   36 expression: var ASSIGN • expression

    ID      shift, and go to state 36
    NUM     shift, and go to state 37
    LPAREN  shift, and go to state 42

    expression           go to state 91
    var                  go to state 52
    simple_expression    go to state 53
    additive_expression  go to state 54
    term                 go to state 55
    factor               go to state 56
    call                 go to state 57


State 69

   46 relop: EQ •

    $default  reduce using rule 46 (relop)


State 70

   47 relop: NEQ •

    $default  reduce using rule 47 (relop)


State 71

   43 relop: LT •

    $default  reduce using rule 43 (relop)


State 72

   42 relop: LTE •

    $default  reduce using rule 42 (relop)


State 73

   44 relop: GT •

    $default  reduce using rule 44 (relop)


State 74

   45 relop: GTE •

    $default  reduce using rule 45 (relop)


State 75

   50 addop: PLUS •

    $default  reduce using rule 50 (addop)


State 76

   51 addop: MINUS •

    $default  reduce using rule 51 (addop)


State 77

   40 simple_expression: additive_expression relop • additive_expression

    ID      shift, and go to state 36
    NUM     shift, and go to state 37
    LPAREN  shift, and go to state 42

    var                  go to state 92
    additive_expression  go to state 93
    term                 go to state 55
    factor               go to state 56
    call                 go to state 57


State 78

   48 additive_expression: additive_expression addop • term

    ID      shift, and go to state 36
    NUM     shift, and go to state 37
    LPAREN  shift, and go to state 42

    var     go to state 92
    term    go to state 94
    factor  go to state 56
    call    go to state 57


State 79

   54 mulop: TIMES •

    $default  reduce using rule 54 (mulop)


State 80

   55 mulop: DIV •

    $default  reduce using rule 55 (mulop)


State 81

   56 mulop: MOD •

    $default  reduce using rule 56 (mulop)


State 82

   52 term: term mulop • factor

    ID      shift, and go to state 36
    NUM     shift, and go to state 37
    LPAREN  shift, and go to state 42

    var     go to state 92
    factor  go to state 95
    call    go to state 57


State 83

   65 arg_list: expression •

    $default  reduce using rule 65 (arg_list)


State 84

   61 call: ID LPAREN args • RPAREN

    RPAREN  shift, and go to state 96


State 85

   62 args: arg_list •
   64 arg_list: arg_list • COMMA expression

    COMMA  shift, and go to state 97

    $default  reduce using rule 62 (args)


State 86

   39 var: ID LBRACK expression • RBRACK

    RBRACK  shift, and go to state 98


State 87

   31 selection_stmt: IF LPAREN expression • RPAREN statement
   32               | IF LPAREN expression • RPAREN statement ELSE statement

    RPAREN  shift, and go to state 99


State 88

   33 iteration_stmt: WHILE LPAREN expression • RPAREN statement

    RPAREN  shift, and go to state 100


State 89

   35 return_stmt: RETURN expression SEMICOLON •

    $default  reduce using rule 35 (return_stmt)


State 90

   57 factor: LPAREN expression RPAREN •

    $default  reduce using rule 57 (factor)


State 91

   36 expression: var ASSIGN expression •

    $default  reduce using rule 36 (expression)


State 92

   58 factor: var •

    $default  reduce using rule 58 (factor)


State 93

   40 simple_expression: additive_expression relop additive_expression •
   48 additive_expression: additive_expression • addop term

    PLUS   shift, and go to state 75
    MINUS  shift, and go to state 76

    $default  reduce using rule 40 (simple_expression)

    addop  go to state 78


State 94

   48 additive_expression: additive_expression addop term •
   52 term: term • mulop factor

    TIMES  shift, and go to state 79
    DIV    shift, and go to state 80
    MOD    shift, and go to state 81

    $default  reduce using rule 48 (additive_expression)

    mulop  go to state 82


State 95

   52 term: term mulop factor •

    $default  reduce using rule 52 (term)


State 96

   61 call: ID LPAREN args RPAREN •

    $default  reduce using rule 61 (call)


State 97

   64 arg_list: arg_list COMMA • expression

    ID      shift, and go to state 36
    NUM     shift, and go to state 37
    LPAREN  shift, and go to state 42

    expression           go to state 101
    var                  go to state 52
    simple_expression    go to state 53
    additive_expression  go to state 54
    term                 go to state 55
    factor               go to state 56
    call                 go to state 57


State 98

   39 var: ID LBRACK expression RBRACK •

    $default  reduce using rule 39 (var)


State 99

   31 selection_stmt: IF LPAREN expression RPAREN • statement
   32               | IF LPAREN expression RPAREN • statement ELSE statement

    ID         shift, and go to state 36
    NUM        shift, and go to state 37
    IF         shift, and go to state 38
    WHILE      shift, and go to state 39
    RETURN     shift, and go to state 40
    SEMICOLON  shift, and go to state 41
    LPAREN     shift, and go to state 42
    LBRACE     shift, and go to state 28

    compound_stmt        go to state 44
    statement            go to state 102
    expression_stmt      go to state 47
    selection_stmt       go to state 48
    iteration_stmt       go to state 49
    return_stmt          go to state 50
    expression           go to state 51
    var                  go to state 52
    simple_expression    go to state 53
    additive_expression  go to state 54
    term                 go to state 55
    factor               go to state 56
    call                 go to state 57


State 100

   33 iteration_stmt: WHILE LPAREN expression RPAREN • statement

    ID         shift, and go to state 36
    NUM        shift, and go to state 37
    IF         shift, and go to state 38
    WHILE      shift, and go to state 39
    RETURN     shift, and go to state 40
    SEMICOLON  shift, and go to state 41
    LPAREN     shift, and go to state 42
    LBRACE     shift, and go to state 28

    compound_stmt        go to state 44
    statement            go to state 103
    expression_stmt      go to state 47
    selection_stmt       go to state 48
    iteration_stmt       go to state 49
    return_stmt          go to state 50
    expression           go to state 51
    var                  go to state 52
    simple_expression    go to state 53
    additive_expression  go to state 54
    term                 go to state 55
    factor               go to state 56
    call                 go to state 57


State 101

   64 arg_list: arg_list COMMA expression •

    $default  reduce using rule 64 (arg_list)


State 102

   31 selection_stmt: IF LPAREN expression RPAREN statement •
   32               | IF LPAREN expression RPAREN statement • ELSE statement

    ELSE  shift, and go to state 104

    $default  reduce using rule 31 (selection_stmt)


State 103

   33 iteration_stmt: WHILE LPAREN expression RPAREN statement •

    $default  reduce using rule 33 (iteration_stmt)


State 104

   32 selection_stmt: IF LPAREN expression RPAREN statement ELSE • statement

    ID         shift, and go to state 36
    NUM        shift, and go to state 37
    IF         shift, and go to state 38
    WHILE      shift, and go to state 39
    RETURN     shift, and go to state 40
    SEMICOLON  shift, and go to state 41
    LPAREN     shift, and go to state 42
    LBRACE     shift, and go to state 28

    compound_stmt        go to state 44
    statement            go to state 105
    expression_stmt      go to state 47
    selection_stmt       go to state 48
    iteration_stmt       go to state 49
    return_stmt          go to state 50
    expression           go to state 51
    var                  go to state 52
    simple_expression    go to state 53
    additive_expression  go to state 54
    term                 go to state 55
    factor               go to state 56
    call                 go to state 57


State 105

   32 selection_stmt: IF LPAREN expression RPAREN statement ELSE statement •

    $default  reduce using rule 32 (selection_stmt)
