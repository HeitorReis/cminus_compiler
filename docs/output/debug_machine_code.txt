Line 1 - Type: Data-Processing. 	Cond: do 		Support: na  	Opcode: in  	Rd:  r13 	= (Rh) r0 	Operand: r0
	Binary: Type(00) 				Cond(0000) 		Supp(00) 		Opcode(1001) 	Rd(r13)  	  Rh(r0) 	Op2(r0)
Line 2 - Type: Data-Processing. 	Cond: do 		Support: i  	Opcode: mov  	Rd:  r14 	= (Rh) r0 	Operand: immediate 29
	Binary: Type(00) 				Cond(0000) 		Supp(10) 		Opcode(1000) 	Rd(r14)  	  Rh(r0) 	Op2(immediate 29)
Line 3 - Type: Load / Store . . 	Cond: do 		Support: na  	Opcode: store  	Rd:  r0 	= (Rh) r13 	Operand: r14
	Binary: Type(01) 				Cond(0000) 		Supp(00) 		Opcode(0000) 	Rd(r0)  	  Rh(r13) 	Op2(r14)
Line 4 - Type: Data-Processing. 	Cond: do 		Support: i  	Opcode: mov  	Rd:  r16 	= (Rh) r0 	Operand: immediate 29
	Binary: Type(00) 				Cond(0000) 		Supp(10) 		Opcode(1000) 	Rd(r16)  	  Rh(r0) 	Op2(immediate 29)
Line 5 - Type: Load / Store . . 	Cond: do 		Support: na  	Opcode: load  	Rd:  r15 	= (Rh) r0 	Operand: null [rX]
	Binary: Type(01) 				Cond(0000) 		Supp(00) 		Opcode(0001) 	Rd(r15)  	  Rh(r0) 	Op2(null [rX])
Line 6 - Type: Data-Processing. 	Cond: do 		Support: na  	Opcode: mov  	Rd:  r1 	= (Rh) r15 	Operand: r0
	Binary: Type(00) 				Cond(0000) 		Supp(00) 		Opcode(1000) 	Rd(r1)  	  Rh(r15) 	Op2(r0)
Line 7 - Type: Data-Processing. 	Cond: do 		Support: na  	Opcode: out  	Rd:  r0 	= (Rh) r0 	Operand: r1
	Binary: Type(00) 				Cond(0000) 		Supp(00) 		Opcode(1010) 	Rd(r0)  	  Rh(r0) 	Op2(r1)
Line 8 - Type: Data-Processing. 	Cond: do 		Support: i  	Opcode: mov  	Rd:  r17 	= (Rh) r0 	Operand: immediate 2
	Binary: Type(00) 				Cond(0000) 		Supp(10) 		Opcode(1000) 	Rd(r17)  	  Rh(r0) 	Op2(immediate 2)
Line 9 - Type: Data-Processing. 	Cond: do 		Support: i  	Opcode: mov  	Rd:  r18 	= (Rh) r0 	Operand: immediate 30
	Binary: Type(00) 				Cond(0000) 		Supp(10) 		Opcode(1000) 	Rd(r18)  	  Rh(r0) 	Op2(immediate 30)
Line 10 - Type: Load / Store . . 	Cond: do 		Support: na  	Opcode: store  	Rd:  r0 	= (Rh) r17 	Operand: r18
	Binary: Type(01) 				Cond(0000) 		Supp(00) 		Opcode(0000) 	Rd(r0)  	  Rh(r17) 	Op2(r18)
Line 11 - Type: Data-Processing. 	Cond: do 		Support: i  	Opcode: mov  	Rd:  r20 	= (Rh) r0 	Operand: immediate 29
	Binary: Type(00) 				Cond(0000) 		Supp(10) 		Opcode(1000) 	Rd(r20)  	  Rh(r0) 	Op2(immediate 29)
Line 12 - Type: Load / Store . . 	Cond: do 		Support: na  	Opcode: load  	Rd:  r19 	= (Rh) r0 	Operand: null [rX]
	Binary: Type(01) 				Cond(0000) 		Supp(00) 		Opcode(0001) 	Rd(r19)  	  Rh(r0) 	Op2(null [rX])
Line 13 - Type: Data-Processing. 	Cond: do 		Support: i  	Opcode: mov  	Rd:  r22 	= (Rh) r0 	Operand: immediate 30
	Binary: Type(00) 				Cond(0000) 		Supp(10) 		Opcode(1000) 	Rd(r22)  	  Rh(r0) 	Op2(immediate 30)
Line 14 - Type: Load / Store . . 	Cond: do 		Support: na  	Opcode: load  	Rd:  r21 	= (Rh) r0 	Operand: null [rX]
	Binary: Type(01) 				Cond(0000) 		Supp(00) 		Opcode(0001) 	Rd(r21)  	  Rh(r0) 	Op2(null [rX])
Line 15 - Type: Data-Processing. 	Cond: do 		Support: s  	Opcode: sub  	Rd:  r0 	= (Rh) r19 	Operand: r21
	Binary: Type(00) 				Cond(0000) 		Supp(01) 		Opcode(0001) 	Rd(r0)  	  Rh(r19) 	Op2(r21)
Line 16 - Type: Branch . . . . . 	Cond: lteq 		Support: i  	Opcode: b    	Rd:  r0 	= (Rh) r0 	Operand: branch target 5
	Binary: Type(11) 				Cond(0110) 		Supp(10) 		Opcode(0000) 	Rd(r0)  	  Rh(r0) 	Op2(branch target 5)
Line 17 - Type: Data-Processing. 	Cond: do 		Support: i  	Opcode: mov  	Rd:  r25 	= (Rh) r0 	Operand: immediate 29
	Binary: Type(00) 				Cond(0000) 		Supp(10) 		Opcode(1000) 	Rd(r25)  	  Rh(r0) 	Op2(immediate 29)
Line 18 - Type: Load / Store . . 	Cond: do 		Support: na  	Opcode: load  	Rd:  r24 	= (Rh) r0 	Operand: null [rX]
	Binary: Type(01) 				Cond(0000) 		Supp(00) 		Opcode(0001) 	Rd(r24)  	  Rh(r0) 	Op2(null [rX])
Line 19 - Type: Data-Processing. 	Cond: do 		Support: na  	Opcode: mov  	Rd:  r1 	= (Rh) r24 	Operand: r0
	Binary: Type(00) 				Cond(0000) 		Supp(00) 		Opcode(1000) 	Rd(r1)  	  Rh(r24) 	Op2(r0)
Line 20 - Type: Data-Processing. 	Cond: do 		Support: na  	Opcode: out  	Rd:  r0 	= (Rh) r0 	Operand: r1
	Binary: Type(00) 				Cond(0000) 		Supp(00) 		Opcode(1010) 	Rd(r0)  	  Rh(r0) 	Op2(r1)
Line 21 - Type: Branch . . . . . 	Cond: do 		Support: i  	Opcode: b    	Rd:  r0 	= (Rh) r0 	Operand: branch target 4
	Binary: Type(11) 				Cond(0000) 		Supp(10) 		Opcode(0000) 	Rd(r0)  	  Rh(r0) 	Op2(branch target 4)
Line 22 - Type: Data-Processing. 	Cond: do 		Support: i  	Opcode: mov  	Rd:  r27 	= (Rh) r0 	Operand: immediate 30
	Binary: Type(00) 				Cond(0000) 		Supp(10) 		Opcode(1000) 	Rd(r27)  	  Rh(r0) 	Op2(immediate 30)
Line 23 - Type: Load / Store . . 	Cond: do 		Support: na  	Opcode: load  	Rd:  r26 	= (Rh) r0 	Operand: null [rX]
	Binary: Type(01) 				Cond(0000) 		Supp(00) 		Opcode(0001) 	Rd(r26)  	  Rh(r0) 	Op2(null [rX])
Line 24 - Type: Data-Processing. 	Cond: do 		Support: na  	Opcode: mov  	Rd:  r1 	= (Rh) r26 	Operand: r0
	Binary: Type(00) 				Cond(0000) 		Supp(00) 		Opcode(1000) 	Rd(r1)  	  Rh(r26) 	Op2(r0)
Line 25 - Type: Data-Processing. 	Cond: do 		Support: na  	Opcode: out  	Rd:  r0 	= (Rh) r0 	Operand: r1
	Binary: Type(00) 				Cond(0000) 		Supp(00) 		Opcode(1010) 	Rd(r0)  	  Rh(r0) 	Op2(r1)
Line 26 - Type: Branch . . . . . 	Cond: do 		Support: i  	Opcode: b    	Rd:  r0 	= (Rh) r0 	Operand: branch target 1
	Binary: Type(11) 				Cond(0000) 		Supp(10) 		Opcode(0000) 	Rd(r0)  	  Rh(r0) 	Op2(branch target 1)
Line 27 - Type: Branch . . . . . 	Cond: do 		Support: i  	Opcode: b    	Rd:  r0 	= (Rh) r0 	Operand: branch target 0
	Binary: Type(11) 				Cond(0000) 		Supp(10) 		Opcode(0000) 	Rd(r0)  	  Rh(r0) 	Op2(branch target 0)
Line 28 - Type: Branch . . . . . 	Cond: do 		Support: na  	Opcode: ret  	Rd:  r31 	= (Rh) r31 	Operand: immediate -1
	Binary: Type(11) 				Cond(0000) 		Supp(00) 		Opcode(1111) 	Rd(r31)  	  Rh(r31) 	Op2(immediate -1)
Line 29 - Type: Data-Processing. 	Cond: do 		Support: na  	Opcode: add  	Rd:  r0 	= (Rh) r0 	Operand: r0
	Binary: Type(00) 				Cond(0000) 		Supp(00) 		Opcode(0000) 	Rd(r0)  	  Rh(r0) 	Op2(r0)
Line 30 - Type: Data-Processing. 	Cond: do 		Support: na  	Opcode: add  	Rd:  r0 	= (Rh) r0 	Operand: r0
	Binary: Type(00) 				Cond(0000) 		Supp(00) 		Opcode(0000) 	Rd(r0)  	  Rh(r0) 	Op2(r0)
Line 31 - Type: Data-Processing. 	Cond: do 		Support: na  	Opcode: add  	Rd:  r0 	= (Rh) r0 	Operand: r0
	Binary: Type(00) 				Cond(0000) 		Supp(00) 		Opcode(0000) 	Rd(r0)  	  Rh(r0) 	Op2(r0)