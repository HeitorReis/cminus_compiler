Line 0 -	Type: Data-Processing. 	Cond: do 		Support: na  	Opcode: in  	Rd:  r13 	= (Rh) r0 	Operand: r0
	Binary: Type(00) 				Cond(0000) 		Supp(00) 		Opcode(1001) 	Rd(r13)  	  Rh(r0) 	Op2(r0)

Line 1 -	Type: Data-Processing. 	Cond: do 		Support: i  	Opcode: mov  	Rd:  r14 	= (Rh) r0 	Operand: immediate 29
	Binary: Type(00) 				Cond(0000) 		Supp(10) 		Opcode(1000) 	Rd(r14)  	  Rh(r0) 	Op2(immediate 29)

Line 2 -	Type: Load / Store . . 	Cond: do 		Support: na  	Opcode: store  	Rd:  r0 	= (Rh) r13 	Operand: r14
	Binary: Type(01) 				Cond(0000) 		Supp(00) 		Opcode(0000) 	Rd(r0)  	  Rh(r13) 	Op2(r14)

Line 3 -	Type: Data-Processing. 	Cond: do 		Support: i  	Opcode: mov  	Rd:  r16 	= (Rh) r0 	Operand: immediate 29
	Binary: Type(00) 				Cond(0000) 		Supp(10) 		Opcode(1000) 	Rd(r16)  	  Rh(r0) 	Op2(immediate 29)

Line 4 -	Type: Load / Store . . 	Cond: do 		Support: na  	Opcode: load  	Rd:  r15 	= (Rh) r0 	Operand: reg_addr: r16
	Binary: Type(01) 				Cond(0000) 		Supp(00) 		Opcode(0001) 	Rd(r15)  	  Rh(r0) 	Op2(reg_addr: r16)

Line 5 -	Type: Data-Processing. 	Cond: do 		Support: na  	Opcode: mov  	Rd:  r1 	= (Rh) r0 	Operand: r15
	Binary: Type(00) 				Cond(0000) 		Supp(00) 		Opcode(1000) 	Rd(r1)  	  Rh(r0) 	Op2(r15)

Line 6 -	Type: Data-Processing. 	Cond: do 		Support: na  	Opcode: out  	Rd:  r0 	= (Rh) r0 	Operand: r1
	Binary: Type(00) 				Cond(0000) 		Supp(00) 		Opcode(1010) 	Rd(r0)  	  Rh(r0) 	Op2(r1)

Line 7 -	Type: Data-Processing. 	Cond: do 		Support: i  	Opcode: mov  	Rd:  r17 	= (Rh) r0 	Operand: immediate 4
	Binary: Type(00) 				Cond(0000) 		Supp(10) 		Opcode(1000) 	Rd(r17)  	  Rh(r0) 	Op2(immediate 4)

Line 8 -	Type: Data-Processing. 	Cond: do 		Support: i  	Opcode: mov  	Rd:  r18 	= (Rh) r0 	Operand: immediate 30
	Binary: Type(00) 				Cond(0000) 		Supp(10) 		Opcode(1000) 	Rd(r18)  	  Rh(r0) 	Op2(immediate 30)

Line 9 -	Type: Load / Store . . 	Cond: do 		Support: na  	Opcode: store  	Rd:  r0 	= (Rh) r17 	Operand: r18
	Binary: Type(01) 				Cond(0000) 		Supp(00) 		Opcode(0000) 	Rd(r0)  	  Rh(r17) 	Op2(r18)

Line 10 -	Type: Data-Processing. 	Cond: do 		Support: i  	Opcode: mov  	Rd:  r20 	= (Rh) r0 	Operand: immediate 29
	Binary: Type(00) 				Cond(0000) 		Supp(10) 		Opcode(1000) 	Rd(r20)  	  Rh(r0) 	Op2(immediate 29)

Line 11 -	Type: Load / Store . . 	Cond: do 		Support: na  	Opcode: load  	Rd:  r19 	= (Rh) r0 	Operand: reg_addr: r20
	Binary: Type(01) 				Cond(0000) 		Supp(00) 		Opcode(0001) 	Rd(r19)  	  Rh(r0) 	Op2(reg_addr: r20)

Line 12 -	Type: Data-Processing. 	Cond: do 		Support: i  	Opcode: mov  	Rd:  r22 	= (Rh) r0 	Operand: immediate 30
	Binary: Type(00) 				Cond(0000) 		Supp(10) 		Opcode(1000) 	Rd(r22)  	  Rh(r0) 	Op2(immediate 30)

Line 13 -	Type: Load / Store . . 	Cond: do 		Support: na  	Opcode: load  	Rd:  r21 	= (Rh) r0 	Operand: reg_addr: r22
	Binary: Type(01) 				Cond(0000) 		Supp(00) 		Opcode(0001) 	Rd(r21)  	  Rh(r0) 	Op2(reg_addr: r22)

Line 14 -	Type: Data-Processing. 	Cond: do 		Support: s  	Opcode: sub  	Rd:  r0 	= (Rh) r19 	Operand: r21
	Binary: Type(00) 				Cond(0000) 		Supp(01) 		Opcode(0001) 	Rd(r0)  	  Rh(r19) 	Op2(r21)

Line 15 -	Type: Branch . . . . . 	Cond: lteq 		Support: i  	Opcode: b    	Rd:  r0 	= (Rh) r0 	Operand: branch target 5
	Binary: Type(11) 				Cond(0110) 		Supp(10) 		Opcode(0000) 	Rd(r0)  	  Rh(r0) 	Op2(branch target 5)

Line 16 -	Type: Data-Processing. 	Cond: do 		Support: i  	Opcode: mov  	Rd:  r25 	= (Rh) r0 	Operand: immediate 29
	Binary: Type(00) 				Cond(0000) 		Supp(10) 		Opcode(1000) 	Rd(r25)  	  Rh(r0) 	Op2(immediate 29)

Line 17 -	Type: Load / Store . . 	Cond: do 		Support: na  	Opcode: load  	Rd:  r24 	= (Rh) r0 	Operand: reg_addr: r25
	Binary: Type(01) 				Cond(0000) 		Supp(00) 		Opcode(0001) 	Rd(r24)  	  Rh(r0) 	Op2(reg_addr: r25)

Line 18 -	Type: Data-Processing. 	Cond: do 		Support: na  	Opcode: mov  	Rd:  r1 	= (Rh) r0 	Operand: r24
	Binary: Type(00) 				Cond(0000) 		Supp(00) 		Opcode(1000) 	Rd(r1)  	  Rh(r0) 	Op2(r24)

Line 19 -	Type: Data-Processing. 	Cond: do 		Support: na  	Opcode: out  	Rd:  r0 	= (Rh) r0 	Operand: r1
	Binary: Type(00) 				Cond(0000) 		Supp(00) 		Opcode(1010) 	Rd(r0)  	  Rh(r0) 	Op2(r1)

Line 20 -	Type: Branch . . . . . 	Cond: do 		Support: i  	Opcode: b    	Rd:  r0 	= (Rh) r0 	Operand: branch target 4
	Binary: Type(11) 				Cond(0000) 		Supp(10) 		Opcode(0000) 	Rd(r0)  	  Rh(r0) 	Op2(branch target 4)

Line 21 -	Type: Data-Processing. 	Cond: do 		Support: i  	Opcode: mov  	Rd:  r27 	= (Rh) r0 	Operand: immediate 30
	Binary: Type(00) 				Cond(0000) 		Supp(10) 		Opcode(1000) 	Rd(r27)  	  Rh(r0) 	Op2(immediate 30)

Line 22 -	Type: Load / Store . . 	Cond: do 		Support: na  	Opcode: load  	Rd:  r26 	= (Rh) r0 	Operand: reg_addr: r27
	Binary: Type(01) 				Cond(0000) 		Supp(00) 		Opcode(0001) 	Rd(r26)  	  Rh(r0) 	Op2(reg_addr: r27)

Line 23 -	Type: Data-Processing. 	Cond: do 		Support: na  	Opcode: mov  	Rd:  r1 	= (Rh) r0 	Operand: r26
	Binary: Type(00) 				Cond(0000) 		Supp(00) 		Opcode(1000) 	Rd(r1)  	  Rh(r0) 	Op2(r26)

Line 24 -	Type: Data-Processing. 	Cond: do 		Support: na  	Opcode: out  	Rd:  r0 	= (Rh) r0 	Operand: r1
	Binary: Type(00) 				Cond(0000) 		Supp(00) 		Opcode(1010) 	Rd(r0)  	  Rh(r0) 	Op2(r1)

Line 25 -	Type: Branch . . . . . 	Cond: do 		Support: i  	Opcode: b    	Rd:  r0 	= (Rh) r0 	Operand: branch target 1
	Binary: Type(11) 				Cond(0000) 		Supp(10) 		Opcode(0000) 	Rd(r0)  	  Rh(r0) 	Op2(branch target 1)

Line 26 -	Type: Branch . . . . . 	Cond: do 		Support: i  	Opcode: b    	Rd:  r0 	= (Rh) r0 	Operand: branch target 0
	Binary: Type(11) 				Cond(0000) 		Supp(10) 		Opcode(0000) 	Rd(r0)  	  Rh(r0) 	Op2(branch target 0)

Line 27 -	Type: Branch . . . . . 	Cond: do 		Support: na  	Opcode: ret  	Rd:  r31 	= (Rh) r31 	Operand: immediate -1
	Binary: Type(11) 				Cond(0000) 		Supp(00) 		Opcode(1111) 	Rd(r31)  	  Rh(r31) 	Op2(immediate -1)

Line 28 -	Type: Data-Processing. 	Cond: do 		Support: na  	Opcode: add  	Rd:  r0 	= (Rh) r0 	Operand: r0
	Binary: Type(00) 				Cond(0000) 		Supp(00) 		Opcode(0000) 	Rd(r0)  	  Rh(r0) 	Op2(r0)

Line 29 -	Type: Data-Processing. 	Cond: do 		Support: na  	Opcode: add  	Rd:  r0 	= (Rh) r0 	Operand: r0
	Binary: Type(00) 				Cond(0000) 		Supp(00) 		Opcode(0000) 	Rd(r0)  	  Rh(r0) 	Op2(r0)

Line 30 -	Type: Data-Processing. 	Cond: do 		Support: na  	Opcode: add  	Rd:  r0 	= (Rh) r0 	Operand: r0
	Binary: Type(00) 				Cond(0000) 		Supp(00) 		Opcode(0000) 	Rd(r0)  	  Rh(r0) 	Op2(r0)
