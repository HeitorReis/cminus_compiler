Line 0 -	Type: Branch . . . . . 	Cond: do 		Support: i  	Opcode: b    	Rd:  na = 	 (Rh) na 	Operand: ProgramCounter+29
	Binary: Type(11) 				Cond(0000) 		Supp(10) 		Opcode(0000) 	Rd(  )   	 Rh(  ) 	Op2(00000000000000011101)

Line 1 -	Type: Data-Processing. 	Cond: do 		Support: i  	Opcode: sub  	Rd:  r29 = 	 (Rh) r29 	Operand: immediate 1
	Binary: Type(00) 				Cond(0000) 		Supp(10) 		Opcode(0001) 	Rd(29)   	 Rh(29) 	Op2(0000000001)

Line 2 -	Type: Load / Store . . 	Cond: do 		Support: na  	Opcode: store  	Rd:  r0 = 	 (Rh) r28 	Operand: r29
	Binary: Type(01) 				Cond(0000) 		Supp(00) 		Opcode(0000) 	Rd(0)   	 Rh(28) 	Op2(1110100000)

Line 3 -	Type: Data-Processing. 	Cond: do 		Support: i  	Opcode: sub  	Rd:  r29 = 	 (Rh) r29 	Operand: immediate 1
	Binary: Type(00) 				Cond(0000) 		Supp(10) 		Opcode(0001) 	Rd(29)   	 Rh(29) 	Op2(0000000001)

Line 4 -	Type: Load / Store . . 	Cond: do 		Support: na  	Opcode: store  	Rd:  r0 = 	 (Rh) r31 	Operand: r29
	Binary: Type(01) 				Cond(0000) 		Supp(00) 		Opcode(0000) 	Rd(0)   	 Rh(31) 	Op2(1110100000)

Line 5 -	Type: Data-Processing. 	Cond: do 		Support: na  	Opcode: mov  	Rd:  r31 = 	 (Rh) r0 	Operand: r29
	Binary: Type(00) 				Cond(0000) 		Supp(00) 		Opcode(1000) 	Rd(31)   	 Rh(0) 	Op2(11101)

Line 6 -	Type: Data-Processing. 	Cond: do 		Support: i  	Opcode: mov  	Rd:  r13 = 	 (Rh) r0 	Operand: immediate 2
	Binary: Type(00) 				Cond(0000) 		Supp(10) 		Opcode(1000) 	Rd(13)   	 Rh(0) 	Op2(0000000010)

Line 7 -	Type: Load / Store . . 	Cond: do 		Support: na  	Opcode: load  	Rd:  r12 = 	 (Rh) r0 	Operand: reg_addr: r13
	Binary: Type(01) 				Cond(0000) 		Supp(00) 		Opcode(0001) 	Rd(12)   	 Rh(0) 	Op2(0110100000)

Line 8 -	Type: Data-Processing. 	Cond: do 		Support: i  	Opcode: mov  	Rd:  r14 = 	 (Rh) r0 	Operand: immediate 0
	Binary: Type(00) 				Cond(0000) 		Supp(10) 		Opcode(1000) 	Rd(14)   	 Rh(0) 	Op2(0000000000)

Line 9 -	Type: Data-Processing. 	Cond: do 		Support: s  	Opcode: sub  	Rd:  r0 = 	 (Rh) r12 	Operand: r14
	Binary: Type(00) 				Cond(0000) 		Supp(01) 		Opcode(0001) 	Rd(0)   	 Rh(12) 	Op2(01110)

Line 10 -	Type: Branch . . . . . 	Cond: neq 		Support: i  	Opcode: b    	Rd:  na = 	 (Rh) na 	Operand: ProgramCounter+2
	Binary: Type(11) 				Cond(0010) 		Supp(10) 		Opcode(0000) 	Rd(  )   	 Rh(  ) 	Op2(00000000000000000010)

Line 11 -	Type: Branch . . . . . 	Cond: do 		Support: i  	Opcode: b    	Rd:  na = 	 (Rh) na 	Operand: ProgramCounter+12
	Binary: Type(11) 				Cond(0000) 		Supp(10) 		Opcode(0000) 	Rd(  )   	 Rh(  ) 	Op2(00000000000000001100)

Line 12 -	Type: Branch . . . . . 	Cond: do 		Support: i  	Opcode: b    	Rd:  na = 	 (Rh) na 	Operand: ProgramCounter+0
	Binary: Type(11) 				Cond(0000) 		Supp(10) 		Opcode(0000) 	Rd(  )   	 Rh(  ) 	Op2(00000000000000000000)

Line 13 -	Type: Data-Processing. 	Cond: do 		Support: i  	Opcode: mov  	Rd:  r16 = 	 (Rh) r0 	Operand: immediate 2
	Binary: Type(00) 				Cond(0000) 		Supp(10) 		Opcode(1000) 	Rd(16)   	 Rh(0) 	Op2(0000000010)

Line 14 -	Type: Load / Store . . 	Cond: do 		Support: na  	Opcode: load  	Rd:  r15 = 	 (Rh) r0 	Operand: reg_addr: r16
	Binary: Type(01) 				Cond(0000) 		Supp(00) 		Opcode(0001) 	Rd(15)   	 Rh(0) 	Op2(1000000000)

Line 15 -	Type: Data-Processing. 	Cond: do 		Support: na  	Opcode: mov  	Rd:  r1 = 	 (Rh) r0 	Operand: r15
	Binary: Type(00) 				Cond(0000) 		Supp(00) 		Opcode(1000) 	Rd(1)   	 Rh(0) 	Op2(01111)

Line 16 -	Type: Data-Processing. 	Cond: do 		Support: na  	Opcode: out  	Rd:  r0 = 	 (Rh) r0 	Operand: r1
	Binary: Type(00) 				Cond(0000) 		Supp(00) 		Opcode(1010) 	Rd(0)   	 Rh(0) 	Op2(00001)

Line 17 -	Type: Data-Processing. 	Cond: do 		Support: i  	Opcode: mov  	Rd:  r18 = 	 (Rh) r0 	Operand: immediate 2
	Binary: Type(00) 				Cond(0000) 		Supp(10) 		Opcode(1000) 	Rd(18)   	 Rh(0) 	Op2(0000000010)

Line 18 -	Type: Load / Store . . 	Cond: do 		Support: na  	Opcode: load  	Rd:  r17 = 	 (Rh) r0 	Operand: reg_addr: r18
	Binary: Type(01) 				Cond(0000) 		Supp(00) 		Opcode(0001) 	Rd(17)   	 Rh(0) 	Op2(1001000000)

Line 19 -	Type: Data-Processing. 	Cond: do 		Support: i  	Opcode: sub  	Rd:  r19 = 	 (Rh) r17 	Operand: immediate 1
	Binary: Type(00) 				Cond(0000) 		Supp(10) 		Opcode(0001) 	Rd(19)   	 Rh(17) 	Op2(0000000001)

Line 20 -	Type: Data-Processing. 	Cond: do 		Support: na  	Opcode: mov  	Rd:  r1 = 	 (Rh) r0 	Operand: r19
	Binary: Type(00) 				Cond(0000) 		Supp(00) 		Opcode(1000) 	Rd(1)   	 Rh(0) 	Op2(10011)

Line 21 -	Type: Data-Processing. 	Cond: do 		Support: i  	Opcode: mov  	Rd:  r28 = 	 (Rh) r0 	Operand: immediate 23
	Binary: Type(00) 				Cond(0000) 		Supp(10) 		Opcode(1000) 	Rd(28)   	 Rh(0) 	Op2(0000010111)

Line 22 -	Type: Branch . . . . . 	Cond: do 		Support: na  	Opcode: bl  	Rd:  na = 	 (Rh) na 	Operand: ProgramCounter-22
	Binary: Type(11) 				Cond(0000) 		Supp(00) 		Opcode(1000) 	Rd(  )   	 Rh(  ) 	Op2(11111111111111101010)

Line 23 -	Type: Branch . . . . . 	Cond: do 		Support: i  	Opcode: b    	Rd:  na = 	 (Rh) na 	Operand: ProgramCounter+0
	Binary: Type(11) 				Cond(0000) 		Supp(10) 		Opcode(0000) 	Rd(  )   	 Rh(  ) 	Op2(00000000000000000000)

Line 24 -	Type: Data-Processing. 	Cond: do 		Support: na  	Opcode: mov  	Rd:  r29 = 	 (Rh) r0 	Operand: r31
	Binary: Type(00) 				Cond(0000) 		Supp(00) 		Opcode(1000) 	Rd(29)   	 Rh(0) 	Op2(11111)

Line 25 -	Type: Load / Store . . 	Cond: do 		Support: na  	Opcode: load  	Rd:  r31 = 	 (Rh) r0 	Operand: reg_addr: r29
	Binary: Type(01) 				Cond(0000) 		Supp(00) 		Opcode(0001) 	Rd(31)   	 Rh(0) 	Op2(1110100000)

Line 26 -	Type: Data-Processing. 	Cond: do 		Support: i  	Opcode: add  	Rd:  r29 = 	 (Rh) r29 	Operand: immediate 1
	Binary: Type(00) 				Cond(0000) 		Supp(10) 		Opcode(0000) 	Rd(29)   	 Rh(29) 	Op2(0000000001)

Line 27 -	Type: Load / Store . . 	Cond: do 		Support: na  	Opcode: load  	Rd:  r28 = 	 (Rh) r0 	Operand: reg_addr: r29
	Binary: Type(01) 				Cond(0000) 		Supp(00) 		Opcode(0001) 	Rd(28)   	 Rh(0) 	Op2(1110100000)

Line 28 -	Type: Data-Processing. 	Cond: do 		Support: i  	Opcode: add  	Rd:  r29 = 	 (Rh) r29 	Operand: immediate 1
	Binary: Type(00) 				Cond(0000) 		Supp(10) 		Opcode(0000) 	Rd(29)   	 Rh(29) 	Op2(0000000001)

Line 29 -	Type: Branch . . . . . 	Cond: do 		Support: na  	Opcode: b    	Rd:  na = 	 (Rh) na 	Operand: ProgramCounter <= r0
	Binary: Type(11) 				Cond(0000) 		Supp(00) 		Opcode(0000) 	Rd(  )   	 Rh(  ) 	Op2(0000011100)

Line 30 -	Type: Data-Processing. 	Cond: do 		Support: i  	Opcode: mov  	Rd:  r29 = 	 (Rh) r0 	Operand: immediate 47
	Binary: Type(00) 				Cond(0000) 		Supp(10) 		Opcode(1000) 	Rd(29)   	 Rh(0) 	Op2(0000101111)

Line 31 -	Type: Data-Processing. 	Cond: do 		Support: na  	Opcode: mov  	Rd:  r31 = 	 (Rh) r0 	Operand: r29
	Binary: Type(00) 				Cond(0000) 		Supp(00) 		Opcode(1000) 	Rd(31)   	 Rh(0) 	Op2(11101)

Line 32 -	Type: Data-Processing. 	Cond: do 		Support: na  	Opcode: in  	Rd:  r12 = 	 (Rh) r0 	Operand: r0
	Binary: Type(00) 				Cond(0000) 		Supp(00) 		Opcode(1001) 	Rd(12)   	 Rh(0) 	Op2(00000)

Line 33 -	Type: Data-Processing. 	Cond: do 		Support: i  	Opcode: mov  	Rd:  r13 = 	 (Rh) r0 	Operand: immediate 0
	Binary: Type(00) 				Cond(0000) 		Supp(10) 		Opcode(1000) 	Rd(13)   	 Rh(0) 	Op2(0000000000)

Line 34 -	Type: Load / Store . . 	Cond: do 		Support: na  	Opcode: store  	Rd:  r0 = 	 (Rh) r12 	Operand: r13
	Binary: Type(01) 				Cond(0000) 		Supp(00) 		Opcode(0000) 	Rd(0)   	 Rh(12) 	Op2(0110100000)

Line 35 -	Type: Data-Processing. 	Cond: do 		Support: i  	Opcode: mov  	Rd:  r15 = 	 (Rh) r0 	Operand: immediate 0
	Binary: Type(00) 				Cond(0000) 		Supp(10) 		Opcode(1000) 	Rd(15)   	 Rh(0) 	Op2(0000000000)

Line 36 -	Type: Load / Store . . 	Cond: do 		Support: na  	Opcode: load  	Rd:  r14 = 	 (Rh) r0 	Operand: reg_addr: r15
	Binary: Type(01) 				Cond(0000) 		Supp(00) 		Opcode(0001) 	Rd(14)   	 Rh(0) 	Op2(0111100000)

Line 37 -	Type: Data-Processing. 	Cond: do 		Support: na  	Opcode: mov  	Rd:  r1 = 	 (Rh) r0 	Operand: r14
	Binary: Type(00) 				Cond(0000) 		Supp(00) 		Opcode(1000) 	Rd(1)   	 Rh(0) 	Op2(01110)

Line 38 -	Type: Data-Processing. 	Cond: do 		Support: i  	Opcode: mov  	Rd:  r28 = 	 (Rh) r0 	Operand: immediate 40
	Binary: Type(00) 				Cond(0000) 		Supp(10) 		Opcode(1000) 	Rd(28)   	 Rh(0) 	Op2(0000101000)

Line 39 -	Type: Branch . . . . . 	Cond: do 		Support: na  	Opcode: bl  	Rd:  na = 	 (Rh) na 	Operand: ProgramCounter-39
	Binary: Type(11) 				Cond(0000) 		Supp(00) 		Opcode(1000) 	Rd(  )   	 Rh(  ) 	Op2(11111111111111011001)

Line 40 -	Type: Branch . . . . . 	Cond: do 		Support: i  	Opcode: b    	Rd:  na = 	 (Rh) na 	Operand: ProgramCounter+0
	Binary: Type(11) 				Cond(0000) 		Supp(10) 		Opcode(0000) 	Rd(  )   	 Rh(  ) 	Op2(00000000000000000000)

Line 41 -	Type: Data-Processing. 	Cond: do 		Support: na  	Opcode: mov  	Rd:  r29 = 	 (Rh) r0 	Operand: r31
	Binary: Type(00) 				Cond(0000) 		Supp(00) 		Opcode(1000) 	Rd(29)   	 Rh(0) 	Op2(11111)

Line 42 -	Type: Load / Store . . 	Cond: do 		Support: na  	Opcode: load  	Rd:  r31 = 	 (Rh) r0 	Operand: reg_addr: r29
	Binary: Type(01) 				Cond(0000) 		Supp(00) 		Opcode(0001) 	Rd(31)   	 Rh(0) 	Op2(1110100000)

Line 43 -	Type: Data-Processing. 	Cond: do 		Support: i  	Opcode: add  	Rd:  r29 = 	 (Rh) r29 	Operand: immediate 1
	Binary: Type(00) 				Cond(0000) 		Supp(10) 		Opcode(0000) 	Rd(29)   	 Rh(29) 	Op2(0000000001)

Line 44 -	Type: Load / Store . . 	Cond: do 		Support: na  	Opcode: load  	Rd:  r28 = 	 (Rh) r0 	Operand: reg_addr: r29
	Binary: Type(01) 				Cond(0000) 		Supp(00) 		Opcode(0001) 	Rd(28)   	 Rh(0) 	Op2(1110100000)

Line 45 -	Type: Data-Processing. 	Cond: do 		Support: i  	Opcode: add  	Rd:  r29 = 	 (Rh) r29 	Operand: immediate 1
	Binary: Type(00) 				Cond(0000) 		Supp(10) 		Opcode(0000) 	Rd(29)   	 Rh(29) 	Op2(0000000001)

Line 46 -	Type: Branch . . . . . 	Cond: do 		Support: na  	Opcode: ret  	Rd:  na = 	 (Rh) na 	Operand: ProgramCounter <= r31
	Binary: Type(11) 				Cond(0000) 		Supp(00) 		Opcode(1111) 	Rd(  )   	 Rh(  ) 	Op2(1111111111)

Line 48 -	Type: Data-Processing. 	Cond: do 		Support: na  	Opcode: add  	Rd:  r0 = 	 (Rh) r0 	Operand: r0
	Binary: Type(00) 				Cond(0000) 		Supp(00) 		Opcode(0000) 	Rd(0)   	 Rh(0) 	Op2(00000)

Line 49 -	Type: Data-Processing. 	Cond: do 		Support: na  	Opcode: add  	Rd:  r0 = 	 (Rh) r0 	Operand: r0
	Binary: Type(00) 				Cond(0000) 		Supp(00) 		Opcode(0000) 	Rd(0)   	 Rh(0) 	Op2(00000)
